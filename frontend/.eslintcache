[{"/Users/alapan/Documents/ssad/jap/frontend/src/reportWebVitals.js":"1","/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx":"2","/Users/alapan/Documents/ssad/jap/frontend/src/components/CreateJob.jsx":"3","/Users/alapan/Documents/ssad/jap/frontend/src/App.js":"4","/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateRecruiter.jsx":"5","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardRecruiter.jsx":"6","/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx":"7","/Users/alapan/Documents/ssad/jap/frontend/src/index.js":"8","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardUser.jsx":"9","/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateUser.jsx":"10","/Users/alapan/Documents/ssad/jap/frontend/src/components/Logout.jsx":"11","/Users/alapan/Documents/ssad/jap/frontend/src/components/PrivateRouter.jsx":"12","/Users/alapan/Documents/ssad/jap/frontend/src/components/ViewApplications.jsx":"13","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedJobApps.jsx":"14","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedApplicants.jsx":"15"},{"size":362,"mtime":1610721768994,"results":"16","hashOfConfig":"17"},{"size":23413,"mtime":1611664234190,"results":"18","hashOfConfig":"17"},{"size":16385,"mtime":1611658474986,"results":"19","hashOfConfig":"17"},{"size":297,"mtime":1610731233322,"results":"20","hashOfConfig":"17"},{"size":10465,"mtime":1611643463399,"results":"21","hashOfConfig":"17"},{"size":7859,"mtime":1611641008397,"results":"22","hashOfConfig":"17"},{"size":6240,"mtime":1611664246455,"results":"23","hashOfConfig":"17"},{"size":547,"mtime":1610768308116,"results":"24","hashOfConfig":"17"},{"size":12218,"mtime":1611669955423,"results":"25","hashOfConfig":"17"},{"size":17244,"mtime":1611643465882,"results":"26","hashOfConfig":"17"},{"size":1422,"mtime":1611665297571,"results":"27","hashOfConfig":"17"},{"size":816,"mtime":1611635614604,"results":"28","hashOfConfig":"17"},{"size":5817,"mtime":1611667757592,"results":"29","hashOfConfig":"17"},{"size":5869,"mtime":1611666079912,"results":"30","hashOfConfig":"17"},{"size":8582,"mtime":1611667554043,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1jb9lyc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alapan/Documents/ssad/jap/frontend/src/reportWebVitals.js",[],["73","74"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx",["75","76","77","78","79","80"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/CreateJob.jsx",["81","82","83","84","85","86","87","88","89","90","91"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\nimport HeaderRecruiter from './HeaderRecruiter'\n\nclass CreateJob extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\ttitle: '',\n            type: '',\n            deadline:'',\n            skill:[''],\n            type:'',\n            salary:'',\n            maxAppli:'',\n            maxPos:'',\n            remAppli:'',\n            remPos:'',\n            duration:'',\n            touched:{\n                title: false,\n                type: false,\n                deadline:false,\n                skill:[false],\n                type:false,\n                salary:false,\n                maxAppli:false,\n                maxPos:false,\n                duration:false,\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeSkill = this.removeSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n        this.validate = this. validate.bind(this);\n        this.validateSkill = this.validateSkill.bind(this);\n        this.validateSubmit = this.validateSubmit.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.removeSkill = this.removeSkill.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n        this.handleBlurSkill = this.handleBlurSkill.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n\n    }\n\n    validateSubmit(){\n        if( this.state.title.length===0){\n            alert(\"Title is Required\");\n            return false;\n        }\n        if(this.state.type===''){\n            alert(\"Select a Type\");\n            return false;\n        }\n        if(((this.state.maxAppli.length===0) || (Number(this.state.maxAppli)<=0))){\n            alert(\"Required Positive Integer\");\n            return false;\n        }\n        if(((this.state.maxPos.length===0) || (Number(this.state.maxPos)<=0))){\n            alert(\"Required Positive Integer\");\n            return false;\n        }\n        if((this.state.duration==='' || Number(this.state.duration)<=0 || Number(this.state.duration)>7)){\n            alert(\"Duration must lie between 1 and 7 months\");\n            return false;\n        }\n        if(this.state.salary===''){\n            alert(\"Enter Salary details\");\n            return false;\n        }\n\n        if((this.state.deadline=== '' || (new Date(this.state.deadline)  < new Date()) ) ){\n            console.log(Date());\n            alert(\"A Deadline needs to be set in future\");\n            return false;\n        }\n        var i, n = this.state.skill.length;\n        for(i=0;i<n;i++){\n            if((this.state['skill'][i] === '')){\n                alert(\"Skill is compulsory. Please remove the skill if not required\")\n                return false;\n            }\n        }\n        return true;\n    }\n\n    validate(){\n        let errors= {\n            title:'',\n            type:'',\n            maxAppli:'',\n            maxPos: '',\n            deadline: '',\n            duration:'',\n            salary:''\n        }\n        if(this.state.touched.title && this.state.title.length===0){\n            errors.title = \"Title is Required\";\n        }\n        if(this.state.touched.type && this.state.type===''){\n            errors.type = \"Select a Type\"\n        }\n        if(this.state.touched.maxAppli && ((this.state.maxAppli.length===0) || (Number(this.state.maxAppli)<=0))){\n            errors.maxAppli = \"Required Positive Integer\";\n        }\n        if(this.state.touched.maxPos && ((this.state.maxPos.length===0) || (Number(this.state.maxPos)<=0))){\n            errors.maxPos = \"Required Positive Integer\";\n        }\n        if(this.state.touched.deadline && (this.state.deadline=== '' || (new Date(this.state.deadline)  < new Date()) ) ){\n            console.log(Date());\n            errors.deadline = \"A Deadline needs to be set in future\";\n        }\n        if(this.state.touched.duration && (this.state.duration==='' ||Number(this.state.duration)<=0 || Number(this.state.duration) > 7 )){\n            errors.duration = \"Duration must lie between 1 and 7 months\";\n        }\n        if(this.state.touched.salary && (this.state.salary==='' || Number(this.state.salary)<=0 )){\n            errors.salary = \"Enter Salary details properly\";\n        }\n        return errors;\n    }\n\n    validateSkill(skill){\n        let errors ={}\n        errors.skill=[];\n        var i, n = skill.length;\n        for(i=0;i<n;i++){\n            errors.skill.push('');\n            if(this.state.touched['skill'][i] && (this.state['skill'][i] === '')){\n                errors['skill'][i] = \"Skill is compulsory. Please remove the skill if not required\"\n            }\n        }\n        return errors;\n    }\n\n\n    handleBlurSkill = (idx)=>{\n        let touched = this.state.touched;\n        touched.skill[idx] = true;\n        this.setState({\n            touched: touched\n        });\n    }\n\n\n    handleBlur = (field)=> {\n        this.setState({\n            touched:{...this.state.touched,[field]:true}\n        });\n    }\n\n\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        let tok = name.split('-');\n        if(tok[0]==='skill'){\n            let sk = this.state.skill;\n            let pos = Number(tok[1]);\n            sk[pos] = value;\n            this.setState({skill:sk});\n        }\n        else{\n            this.setState({\n            [name]: value\n            });\n        }\n    }\n\n    addSkill(){\n        let sk = this.state.skill;\n        sk.push('');\n        let touched = this.state.touched;\n        touched.skill.push(false);\n        this.setState({skill : sk, touched: touched});\n    }\n\n    removeSkill(idx){\n        let sk = this.state.skill;\n        sk.splice(idx,1);\n        let touched = this.state.touched;\n        touched.skill.splice(idx,1);\n        this.setState({skill : sk, touched: touched});\n    }\n\n    renderSkill(){\n        let sk = this.state.skill;\n        let errors = this.validateSkill(sk);\n        let sks = sk.map((val,idx)=>{\n            let skIdx = `skill-${idx}`;\n            return(\n                <FormGroup row>\n                <Label htmlFor=\"type\" md={2}></Label>\n                <Col md={3}>\n                    <Input type=\"select\" name={skIdx}\n                    value={this.state.skill[idx]}\n                    onChange={this.handleInputChange}\n                    valid={errors.skill[idx] === ''}\n                    invalid={errors.skill[idx] !== ''}\n                    onBlur={()=>{this.handleBlurSkill(idx)}}\n                    >\n                        <option value=''> Select Type</option>\n                        <option>C++</option>\n                        <option>Python</option>\n                    </Input>\n                    <FormFeedback>{errors.skill[idx]}</FormFeedback>\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeSkill(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Skills</Label>\n                </FormGroup>\n                {sks}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addSkill}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n    }\n\n\n    handleSubmit(event) {\n        if(!this.validateSubmit()){\n            event.preventDefault();\n            return;\n        }\n        // alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/jobs\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Job Created\");\n            console.log( response);\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n    render(){\n\n        let errors = this.validate();\n        let skills = this.renderSkill();\n\n        return (\n            <div className=\"container\">\n                <HeaderRecruiter/>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"title\" md={2}>Title of Job</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"title\" name=\"title\"\n                                        placeholder=\"Name of the Job Profile\"\n                                        value={this.state.title}\n                                        onChange={this.handleInputChange}\n                                        valid={errors.title === ''}\n                                        invalid={errors.title !== ''}\n                                        onBlur={()=>{this.handleBlur('title')}}\n                                        />\n                                        <FormFeedback> {errors.title} </FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"type\" md={2}>Type</Label>\n                                <Col md={10}>\n                                <Input type=\"select\" id=\"type\" name=\"type\"\n                                    placeholder=\"Type of your Job\"\n                                    value={this.state.type}\n                                    onChange={this.handleInputChange}\n                                    valid={errors.type === ''}\n                                    invalid={errors.type !== ''}\n                                    onBlur={()=>{this.handleBlur('type')}}\n                                    >\n                                        <option value=''>Select Type</option>\n                                        <option>Full Time</option>\n                                        <option>Part Time</option>\n                                        <option>Work From Home</option>\n                                </Input>\n\n                                <FormFeedback>{errors.type}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"salary\" name=\"salary\"\n                                    placeholder=\"Salary\"\n                                    value={this.state.salary}\n                                    valid={errors.salary === ''}\n                                    invalid={errors.salary !== ''}\n                                    onBlur={()=>{this.handleBlur('salary')}}\n                                    onChange={this.handleInputChange} />\n                                <FormFeedback>{errors.salary}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"maxPos\" md={2}>Maximum Positions</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"maxPos\" name=\"maxPos\"\n                                    placeholder=\"Maximum Number of Positions to be filled\"\n                                    value={this.state.maxPos}\n                                    valid={errors.maxPos === ''}\n                                    invalid={errors.maxPos !== ''}\n                                    onBlur={()=>{this.handleBlur('maxPos')}}\n                                    onChange={this.handleInputChange} />\n                                <FormFeedback>{errors.maxPos}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"maxAppli\" md={2}>Maximum Applications</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"maxAppli\" name=\"maxAppli\"\n                                    placeholder=\"Maximum Number of Applications\"\n                                    value={this.state.maxAppli}\n                                    valid={errors.maxAppli === ''}\n                                    invalid={errors.maxAppli !== ''}\n                                    onBlur={()=>{this.handleBlur('maxAppli')}}\n                                    onChange={this.handleInputChange} />\n                                <FormFeedback>{errors.maxAppli}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"duration\" md={2}>Duration</Label>\n                                <Col md={10}>\n                                <Input type=\"select\" id=\"duration\" name=\"duration\"\n                                    placeholder=\"Duration in Months\"\n                                    value={this.state.duration}\n                                    valid={errors.duration === ''}\n                                    invalid={errors.duration !== ''}\n                                    onBlur={()=>{this.handleBlur('duration')}}\n                                    onChange={this.handleInputChange} >\n                                    <option value=''>Select</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                    <option>6</option>\n                                    <option>7</option>\n                                    </Input>\n                                <FormFeedback>{errors.duration}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"deadline\" md={2}>Deadline</Label>\n                                <Col md={10}>\n                                <Input type=\"datetime-local\" id=\"deadline\" name=\"deadline\"\n                                    placeholder=\"Deadline to Fill\"\n                                    value={this.state.deadline}\n                                    valid={errors.deadline === ''}\n                                    invalid={errors.deadline !== ''}\n                                    onBlur={()=>{this.handleBlur('deadline')}}\n                                    onChange={this.handleInputChange} />\n                                <FormFeedback>{errors.deadline}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            {skills}\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" type=\"submit\">\n                                        Create Job\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default CreateJob;","/Users/alapan/Documents/ssad/jap/frontend/src/App.js",["92"],"import React,{ Component } from 'react';\nimport Main from './components/Main';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Main />\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n",["93","94"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateRecruiter.jsx",["95","96","97","98","99","100","101","102"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\n\nimport HeaderRecruiter from './HeaderRecruiter'\n\nclass UpdateUser extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            firstName:'',\n            lastName:'',\n            email: '',\n            bio:'',\n            telnum:'',\n            touched:{\n                firstName:false,\n                lastName:false,\n                email: false,\n                bio:false,\n                telnum:false,\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setUpData= this.setUpData.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.validate = this.validate.bind(this);\n        this.validateSubmit = this.validateSubmit.bind(this);\n    }\n\n    setUpData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/recruiters/me\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            // alert(JSON.stringify(response.data));\n            this.setState({\n                firstName: response.data.firstName,\n                lastName: response.data.lastName,\n                email: response.data.email,\n                telnum: response.data.telnum,\n                bio:response.data.bio\n            })\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    componentDidMount(){\n        this.setUpData();\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        console.log(name , value);\n\n        this.setState({\n        [name]: value\n        });\n    }\n\n    validate(firstName,lastName,email,telnum,bio) {\n        console.log('called');\n        const errors={\n            firstName:'',\n            lastName:'',\n            email: '',\n            telnum:'',\n            bio:''\n        };\n        if(this.state.touched.firstName && (firstName.length === 0)){\n            errors.firstName='First Name is required';\n        }\n        if(this.state.touched.lastName && (lastName.length===0)){\n            errors.lastName='Last Name is required';\n        }\n        const reg = /^[a-zA-Z0-9.!#$%&'+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+.+(?:.[a-zA-Z0-9-]))$/;\n        if(this.state.touched.email && !reg.test(email)){\n            errors.email='Invalid Email';\n        }\n        const phonereg = /^\\d{10}$/;\n        if(this.state.touched.telnum && !phonereg.test(telnum)){\n            errors.telnum='Invalid Phone Number';\n        }\n        let allWords = bio.split(' ');\n        if(this.state.touched.bio && (allWords.length > 250)){\n            errors.bio='Max Limit 250 words';\n        }\n\n        return errors;\n    }\n\n    validateSubmit(firstName,lastName,email,telnum,bio) {\n\n        if((firstName.length === 0)){\n            alert('First Name is required');\n            return false;\n        }\n        if(this.state.touched.lastName && (lastName.length===0)){\n            alert('Last Name is required');\n            return false;\n        }\n        const reg = /^[a-zA-Z0-9.!#$%&'+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+.+(?:.[a-zA-Z0-9-]))$/;\n        if(!reg.test(email)){\n            alert('Invalid Email');\n            return false;\n        }\n        const phonereg = /^\\d{10}$/;\n        if(this.state.touched.telnum && (!phonereg.test(telnum) && telnum!=='')){\n            alert('Invalid Phone Number');\n            return false;\n        }\n        let allWords = bio.split(' ');\n        if(this.state.touched.bio && (allWords.length > 250)){\n            alert('Max Limit 250 words');\n            return false;\n        }\n        return true;\n    }\n\n    handleSubmit(event) {\n        console.log('here');\n        if(!this.validateSubmit(this.state.firstName, this.state.lastName, this.state.email, this.state.telnum, this.state.bio)){\n            event.preventDefault();\n            return;\n        }\n        console.log('yes');\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/recruiters/me\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Done\");\n            console.log(response)\n        }).catch(error => {\n            alert(\"Not Done!!\");\n            if (error) {\n                console.log(error.response);\n            }\n        });\n        event.preventDefault();\n    }\n\n\n    handleBlur = (field)=> {\n        this.setState({\n            touched:{...this.state.touched,[field]:true}\n        });\n    }\n\n    render(){\n\n        let errors = this.validate(this.state.firstName, this.state.lastName, this.state.email, this.state.telnum, this.state.bio)\n        // console.log(errors);\n        // console.log(this.state)\n        return(\n            <div className=\"container\">\n                <HeaderRecruiter/>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        valid={errors.firstName===''}\n                                        invalid={errors.firstName!==''}\n                                        onChange={this.handleInputChange}\n                                        onBlur={()=>{this.handleBlur('firstName')}} />\n                                        <FormFeedback>{errors.firstName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        onChange={this.handleInputChange}\n                                        valid={errors.lastName===''}\n                                        invalid={errors.lastName!==''}\n                                        onChange={this.handleInputChange}\n                                        onBlur={()=>{this.handleBlur('lastName')}} />\n                                        <FormFeedback>{errors.lastName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        valid={errors.email===''}\n                                        invalid={errors.email!==''}\n                                        onChange={this.handleInputChange}\n                                        onBlur={()=>{this.handleBlur('email')}} />\n                                        <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                            <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Contact Number\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.telnum}\n                                    valid={errors.telnum===''}\n                                    invalid={errors.telnum!==''}\n                                    onChange={this.handleInputChange}\n                                    onBlur={()=>{this.handleBlur('telnum')}} />\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\"\n                                    value={this.state.bio}\n                                    onChange={this.handleInputChange}\n                                    valid={errors.bio===''}\n                                    invalid={errors.bio!==''}\n                                    onChange={this.handleInputChange}\n                                    onBlur={()=>{this.handleBlur('bio')}} />\n                                    <FormFeedback>{errors.bio}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\" onClick={this.handleSubmit}>\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default UpdateUser;","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardRecruiter.jsx",["103","104","105","106","107","108","109","110","111"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback, Card, Row , CardTitle, CardText, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\nimport HeaderRecruiter from './HeaderRecruiter'\n\nclass DashboardRecruiter extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n            joblist:[],\n            isModalOpen:false,\n            maxAppli:'',\n            maxPos:'',\n            deadline:'',\n            selectedId:''\n        };\n        this.getData = this.getData.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.getJobData = this.getJobData.bind(this);\n        this.submitEdit = this.submitEdit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n\n    validateSubmit(){\n        if(((this.state.maxAppli.length===0) || (Number(this.state.maxAppli)<=0))){\n            alert(\"Required Positive Integer for Maximum Applications\");\n            return false;\n        }\n        if(((this.state.maxPos.length===0) || (Number(this.state.maxPos)<=0))){\n            alert(\"Required Positive Integer for maximum positions\");\n            return false;\n        }\n        if((this.state.deadline=== '' || (new Date(this.state.deadline)  < new Date()) ) ){\n            alert(\"A Deadline needs to be set in future\");\n            return false;\n        }\n        return true;\n    }\n\n    getData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/jobs/myjobs\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // console.log(response.data);\n            this.setState({\n                joblist:response.data,\n            })\n        }).catch(error => {\n            // alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    getJobData(jid){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/jobs/\"+jid,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert('getting edit data');\n            console.log(response.data);\n            this.setState({\n                isModalOpen: true,\n                maxAppli: response.data.maxAppli,\n                maxPos: response.data.maxPos,\n                deadline: response.data.deadline,\n                selectedId:jid\n            });\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleDelete(event){\n        let jid = event.target.id;\n        axios({\n            method: \"DELETE\",\n            url: \"http://localhost:3000/jobs/\"+jid,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            this.getData();\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    toggleModal(event)\n    {\n        if(this.state.isModalOpen === false)\n        {\n            var jid = event.target.id;\n            this.getJobData(jid)\n        }\n        else\n        {\n            this.getData();\n            this.setState({\n                isModalOpen: false,\n                maxAppli: '',\n                maxPos:'',\n                deadline:'',\n                selectedId:'',\n            });\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    submitEdit(event){\n        if(!this.validateSubmit()){\n            event.preventDefault();\n            return;\n        }\n        let obj={};\n        obj.maxAppli = this.state.maxAppli;\n        obj.maxPos = this.state.maxPos;\n        obj.deadline = this.state.deadline;\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/jobs/\"+this.state.selectedId,\n            data:obj,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            this.getData();\n            this.setState({isModalOpen:false});\n        }).catch(error => {\n            // alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render(){\n\n        let allJob = this.state.joblist;\n        let jobs = allJob.map((job)=>{\n\n            if(job.remPos==0) return null;\n            return(\n                <Row>\n                <Col>\n                  <Card body>\n                    <CardTitle tag=\"h5\">{job.title}</CardTitle>\n                    <CardText>Id : {job._id}</CardText>\n                    <CardText>Skills : {job.skill}</CardText>\n                    <CardText>Deadline : {job.deadline}</CardText>\n                    <CardText>Remaining Applications : {job.remAppli}</CardText>\n                    <CardText>Remaining Positions : {job.remPos}</CardText>\n                    <CardText>Type of Job : {job.type}</CardText>\n                    <CardText>Salary : {job.salary}</CardText>\n                    <CardText>Duration : {job.duration}</CardText>\n                    <CardText>Rating : {job.rating}</CardText>\n                    <Button id={job._id} onClick = {this.toggleModal}>Edit Job</Button>\n                    <Button id={job._id} onClick = {this.handleDelete}>Delete Job</Button>\n                    <Link to={`/recruiters/${job._id}`}>\n                    <Button id={job._id}>\n                        View Applications\n                    </Button>\n                    </Link>\n                    </Card>\n                </Col>\n                </Row>\n            )\n        });\n\n        return(\n            <div className=\"container\">\n                <HeaderRecruiter/>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label htmlFor=\"maxAppli\">Maximum Applications</Label>\n                                <Input type=\"Number\" id=\"maxAppli\" name=\"maxAppli\" value={this.state.maxAppli} onChange={this.handleInputChange}/>\n                                <Label htmlFor=\"maxPos\">Maximum Positions</Label>\n                                <Input type=\"Number\" id=\"maxPos\" name=\"maxPos\" value={this.state.maxPos} onChange={this.handleInputChange}/>\n                                <Label htmlFor=\"deadline\">Deadline</Label>\n                                <Input type=\"datetime-local\" id=\"deadline\" name=\"deadline\" value={this.state.deadline} onChange={this.handleInputChange}/>\n                            </FormGroup>\n                            <Button color=\"primary\" onClick={this.submitEdit}>Submit Application</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                {jobs}\n            </div>\n        );\n    }\n}\n\nexport default DashboardRecruiter;\n\n\n","/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx",["112","113","114","115","116","117","118","119"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\temail: '',\n            password: '',\n\t\t\tbearerToken:''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleUserSubmit = this.handleUserSubmit.bind(this);\n        this.handleRecruiterSubmit = this.handleRecruiterSubmit.bind(this);\n        this.validateSubmit = this.validateSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    handleUserSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        // alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        if(!this.validateSubmit()){\n            return;\n        }\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/users/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert(JSON.stringify(response));\n            console.log(response);\n            this.props.clogin('Bearer '+response.data.token,'user');\n            window.location.replace(\"http://localhost:3001/users/dashboard\");\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleRecruiterSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        // alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        if(!this.validateSubmit()){\n            return;\n        }\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/recruiters/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert(JSON.stringify(response));\n            console.log(response);\n            this.props.clogin('Bearer '+response.data.token,'recruiter');\n            window.location.replace(\"http://localhost:3001/recruiters/dashboard\");\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    validateSubmit(){\n        const reg = /^[a-zA-Z0-9.!#$%&'+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+.+(?:.[a-zA-Z0-9-]))$/;\n        if(!reg.test(this.state.email)){\n            alert('Enter valid Email');\n            return false;\n        }\n        if(this.state.password==''){\n            alert(\"Enter password\");\n            return false;\n        }\n        return true;\n    }\n\n    render(){\n        if(this.props.isLoggedIn===true){\n            if(this.props.type==='user')\n                return (<Redirect to='/users/dashboard'/>);\n            else if(this.props.type==='recruiter'){\n                return (<Redirect to='/recruiters/dashboard'/>)\n            }\n            else{\n                return(<Redirect to='/'/>)\n            }\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <p>Don't have an account already? <Link to='/signup'><Button>Sign up</Button></Link> </p>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\n                                <Col md={10}>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" onClick={this.handleUserSubmit}>\n                                        Sign In as Applicant\n                                    </Button>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Button color=\"primary\" onClick={this.handleRecruiterSubmit}>\n                                        Sign In as Recruiter\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Login;","/Users/alapan/Documents/ssad/jap/frontend/src/index.js",[],"/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardUser.jsx",["120","121","122","123","124","125","126","127","128","129","130"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateUser.jsx",["131","132","133","134","135","136","137"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/Logout.jsx",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React, {Component} from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input} from 'reactstrap';\nimport { NavLink, Redirect, Link } from 'react-router-dom';\n\nclass Logout extends Component{\n    constructor(props){\n        super(props);\n        this.handleYes = this.handleYes.bind(this);\n    }\n\n    handleYes(){\n        this.props.clogout();\n        window.location.replace(\"http://localhost:3001/\");\n    }\n\n    render()\n    {\n        if(this.props.isLoggedIn===false){\n            return (<Redirect to='/' />);\n        }\n\n        let ButtonOut = null;\n        console.log(this.props.type);\n        if(this.props.type === 'user') ButtonOut = <Link to='users/dashboard'><Button>No</Button></Link>\n        else if(this.props.type === 'recruiter'){\n            ButtonOut = <Link to='recruiters/dashboard'><Button>No</Button></Link>\n        }\n        return(\n            <div className=\"container\">\n                    <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                <p>Hey User, Are you sure you want to Logout ?</p>\n                <Button onClick={this.handleYes}>Yes</Button>\n                {ButtonOut}\n                {/* <Button>No</Button> */}\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Logout;","/Users/alapan/Documents/ssad/jap/frontend/src/components/PrivateRouter.jsx",["153","154"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nexport default class PrivateRouter extends Component {\n    render() {\n        let isLoggedIn = true;\n        if (!this.props.isLoggedIn) {\n            isLoggedIn = false;\n        }\n        if (!this.props.desiredType.includes(this.props.type)) {\n            isLoggedIn = false;\n        }\n\n        if (!isLoggedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            if (this.props.hasProps) {\n                return <Route to={this.props.path} render={\n                    (props) => this.props.component\n                } />;\n            } else {\n                return <Route to={this.props.path} exact component={this.props.component}/>\n            }\n        }\n    }\n}","/Users/alapan/Documents/ssad/jap/frontend/src/components/ViewApplications.jsx",["155","156","157","158","159","160","161","162","163","164","165"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback, Card, Row , CardTitle, CardText, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\nimport HeaderUser from './HeaderUser';\n\nclass ViewApplications extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n            applist:[],\n            appid : '',\n            rate:'',\n            isModalOpen:false\n        };\n\n        this.getData = this.getData.bind(this);\n        this.submitRating = this.submitRating.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n\n    }\n\n    getData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/applications/myapplications/\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            this.setState({\n                applist:response.data\n            })\n        }).catch(error => {\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    submitRating(event){\n        event.preventDefault();\n        if(this.state.rate===''){\n            alert(\"enter valid rating\");\n            return;\n        }\n        var appid = this.state.appid;\n        console.log(appid);\n        var endpoint = \"http://localhost:3000/jobs/rate/\"+appid;\n        var data = {};\n        data.rate = this.state.rate;\n        axios({\n            method: \"POST\",\n            url: endpoint,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert(JSON.stringify(response));\n            console.log(response.data);\n            this.setState({isModalOpen:false});\n            this.getData();\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    toggleModal(event)\n    {\n        if(this.state.isModalOpen === false)\n        {\n            var appid = event.target.id;\n            //console.log(temp);\n            this.setState({\n                isModalOpen: true,\n                appid : appid,\n                rate:'',\n            });\n        }\n        else\n        {\n            this.setState({\n                isModalOpen: false,\n                appid:'',\n                rate:''\n            });\n        }\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render(){\n\n        console.log(this.state.applist);\n\n        let allApps = this.state.applist;\n\n        let apps = allApps.map((app)=>{\n            let id = app._id\n            let title = app.job.title;\n            let jid = app.job._id;\n\n            let ButtonRate=<Button></Button>;\n            if(app.status==='pending')ButtonRate = <Button>Pending</Button>\n            else if(app.status==='selected' && app.rated===false) ButtonRate = <Button id={app._id} onClick={this.toggleModal}>You are Selected, Rate</Button>\n            else if(app.status==='selected' && app.rated===true) ButtonRate = <Button >Selected, Already Rated</Button>\n            else if(app.status==='shortlisted') ButtonRate = <Button >Shortlisted </Button>\n            else if(app.status==='rejected') ButtonRate = <Button >Rejected </Button>\n\n\n            return(\n                <Row>\n                <Col>\n                  <Card body>\n                    <CardTitle tag=\"h5\">{title}</CardTitle>\n                    <CardText>Id : {app._id}</CardText>\n                    <CardText>Type of Job : {app.job.type}</CardText>\n                    <CardText>Duration : {app.job.duration}</CardText>\n                    <CardText>SOP : {app.sop}</CardText>\n                    <CardText>Rated: {String(app.rated)}</CardText>\n                    <CardText>Status : {app.status}</CardText>\n                    <CardText>Rating: {app.job.rating}</CardText>\n                    {ButtonRate}\n                  </Card>\n                </Col>\n                </Row>\n            )\n        });\n\n        return(<div className=\"container\">\n            <HeaderUser/>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label htmlFor=\"rate\">Rating</Label>\n                            <Input type=\"select\" id=\"rate\" name=\"rate\"  value={this.state.rate} onChange={this.handleInputChange}>\n                            <option value=''>select</option>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                            </Input>\n                        </FormGroup>\n                        <Button color=\"primary\" onClick={this.submitRating}>Submit Application</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            {apps}\n        </div>)\n    }\n}\n\nexport default ViewApplications;","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedJobApps.jsx",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback, Card, Row , CardTitle, CardText, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\nimport HeaderRecruiter from './HeaderRecruiter';\n\nclass SelectedJobApps extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n            applist:[],\n            sortBy:'',\n            order:'desc'\n        };\n\n        this.getData = this.getData.bind(this);\n        this.handleButton = this.handleButton.bind(this);\n        this.setSort = this.setSort.bind(this);\n        this.comp = this.comp.bind(this);\n\n    }\n\n    comp(a,b){\n        let by = this.state.sortBy;\n        let order = this.state.order;\n        if(this.state.sortBy===\"rating\"){\n            let factor = 0;\n            if(order==='asc')factor = 0;\n            else if(order==='desc')factor = 1;\n\n            if(a[by]!==undefined && b[by]!==undefined)\n                return (1-2*factor)*(a[by] - b[by]);\n            else\n                return 1;\n        }\n        else if(this.state.sortBy===\"name\"){\n            let str1 = a[\"name\"];\n            let str2 = b[\"name\"];\n\n\n            if(this.state.order==='asc')return str1.localeCompare(str2);\n            else{\n                return str2.localeCompare(str1);\n            }\n        }\n        else if(this.state.sortBy===\"createdAt\"){\n            let flag;\n\n            let str1 = a[\"createdAt\"];\n            let str2 = b[\"createdAt\"];\n\n\n            if(this.state.order==='asc')flag = 0;\n            else if(this.state.order==='desc') flag = 1;\n            return (1 - flag*2) * (new Date(str1) - new Date(str2));\n        }\n    }\n\n    setSort(event){\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            sortBy : name\n        });\n\n\n        if(this.state.order==='desc'){\n            this.setState({\n                order : 'asc'\n            });\n        }\n        else{\n            this.setState({\n                order : 'desc'\n            });\n        }\n        console.log(this.state.sortBy);\n        console.log(this.state.order);\n    }\n\n    handleButton(event){\n        alert('Please wait');\n        let name = event.target.name;\n        let id = event.target.id;\n        axios({\n            method: \"PUT\",\n            data:{'status':name},\n            url: \"http://localhost:3000/applications/status/\"+id,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert(JSON.stringify(response));\n            this.getData();\n        }).catch(error => {\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    getData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/applications/appliedto/\"+this.props.jobid,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            this.setState({\n                applist:response.data\n            })\n        }).catch(error => {\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render(){\n\n        console.log(this.state.applist);\n        let allApps = this.state.applist;\n\n        let Apps = allApps.map((app)=>{\n            app.name = app.applier.firstName;\n            app.time = app.createdAt;\n            app.rating = app.applier.rating;\n            return app;\n        })\n\n        if(this.state.sortBy!==''){\n            console.log('1')\n            Apps = Apps.sort(this.comp);\n        }\n\n\n        let apps = Apps.map((app)=>{\n            let id = app._id\n            let ButtonStatus;\n            if(app.status==='pending')ButtonStatus= <Button id={app._id} name='shortlisted' onClick={this.handleButton}>Shortlist</Button>\n            else if(app.status==='selected') ButtonStatus = <Button id={app._id} name='selected'>Selected</Button>\n            else if(app.status==='shortlisted') ButtonStatus = <Button name='selected' id={app._id} onClick={this.handleButton}>Select</Button>\n            else ButtonStatus = <div></div>;\n\n            let ButtonReject;\n            if(app.status !== 'rejected')ButtonReject = <Button id={app._id} name='rejected' onClick={this.handleButton}> Reject </Button>\n            if(app.status === 'selected')ButtonReject = null;\n\n            if(app.status === 'rejected') return null;\n\n            return(\n                <Row>\n                <Col>\n                  <Card body>\n                    <CardText>Id: {app._id}</CardText>\n                    <CardText>SOP: {app.sop}</CardText>\n                    <CardText>Email: {app.applier.email}</CardText>\n                    <CardText>Rating: {app.rating}</CardText>\n                    <CardText>Name: {app.name}</CardText>\n                    <CardText>Time of Creation: {app.createdAt}</CardText>\n                    {ButtonStatus}\n                    {ButtonReject}\n                  </Card>\n                </Col>\n                </Row>\n            )\n        });\n\n        return(<div className=\"container\">\n                <HeaderRecruiter />\n                <Col md={6}> <Button row name=\"createdAt\" onClick={this.setSort}>Sort By Creation Time</Button></Col>\n                <Col md={6}> <Button row name=\"name\" onClick={this.setSort}>Sort By Name</Button></Col>\n                <Col md={6}> <Button row name=\"rating\" onClick={this.setSort}>Sort By Rating</Button></Col>\n            {apps}\n        </div>)\n    }\n}\n\nexport default SelectedJobApps;","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedApplicants.jsx",["184","185","186","187","188","189","190","191","192","193","194","195","196","197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"207","line":2,"column":95,"nodeType":"204","messageId":"205","endLine":2,"endColumn":100},{"ruleId":"202","severity":1,"message":"208","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":120,"column":13,"nodeType":"204","messageId":"211","endLine":120,"endColumn":14},{"ruleId":"209","severity":1,"message":"212","line":120,"column":15,"nodeType":"204","messageId":"211","endLine":120,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"215","line":5,"column":42,"nodeType":"204","messageId":"205","endLine":5,"endColumn":46},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"202","severity":1,"message":"217","line":5,"column":57,"nodeType":"204","messageId":"205","endLine":5,"endColumn":65},{"ruleId":"218","severity":1,"message":"219","line":18,"column":13,"nodeType":"220","messageId":"221","endLine":18,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":30,"column":17,"nodeType":"220","messageId":"221","endLine":30,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":43,"column":25,"nodeType":"224","messageId":"225","endLine":43,"endColumn":39,"fix":"226"},{"ruleId":"202","severity":1,"message":"227","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"198","replacedBy":"228"},{"ruleId":"200","replacedBy":"229"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"215","line":3,"column":9,"nodeType":"204","messageId":"205","endLine":3,"endColumn":13},{"ruleId":"202","severity":1,"message":"208","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":16},{"ruleId":"230","severity":1,"message":"231","line":199,"column":41,"nodeType":"232","endLine":199,"endColumn":74},{"ruleId":"230","severity":1,"message":"231","line":213,"column":41,"nodeType":"232","endLine":213,"endColumn":74},{"ruleId":"230","severity":1,"message":"231","line":226,"column":37,"nodeType":"232","endLine":226,"endColumn":70},{"ruleId":"230","severity":1,"message":"231","line":239,"column":37,"nodeType":"232","endLine":239,"endColumn":70},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"233","line":2,"column":81,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"202","severity":1,"message":"217","line":5,"column":57,"nodeType":"204","messageId":"205","endLine":5,"endColumn":65},{"ruleId":"234","severity":1,"message":"235","line":178,"column":26,"nodeType":"236","messageId":"221","endLine":178,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"233","line":2,"column":81,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"234","severity":1,"message":"235","line":93,"column":31,"nodeType":"236","messageId":"221","endLine":93,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"233","line":2,"column":81,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"215","line":5,"column":42,"nodeType":"204","messageId":"205","endLine":5,"endColumn":46},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"202","severity":1,"message":"217","line":5,"column":57,"nodeType":"204","messageId":"205","endLine":5,"endColumn":65},{"ruleId":"234","severity":1,"message":"235","line":153,"column":28,"nodeType":"236","messageId":"221","endLine":153,"endColumn":30},{"ruleId":"234","severity":1,"message":"237","line":238,"column":29,"nodeType":"236","messageId":"221","endLine":238,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"215","line":3,"column":9,"nodeType":"204","messageId":"205","endLine":3,"endColumn":13},{"ruleId":"202","severity":1,"message":"208","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":60,"column":21,"nodeType":"204","messageId":"211","endLine":60,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":132,"column":13,"nodeType":"204","messageId":"211","endLine":132,"endColumn":14},{"ruleId":"209","severity":1,"message":"212","line":132,"column":15,"nodeType":"204","messageId":"211","endLine":132,"endColumn":16},{"ruleId":"202","severity":1,"message":"238","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":13},{"ruleId":"202","severity":1,"message":"239","line":2,"column":15,"nodeType":"204","messageId":"205","endLine":2,"endColumn":21},{"ruleId":"202","severity":1,"message":"240","line":2,"column":23,"nodeType":"204","messageId":"205","endLine":2,"endColumn":34},{"ruleId":"202","severity":1,"message":"241","line":2,"column":36,"nodeType":"204","messageId":"205","endLine":2,"endColumn":49},{"ruleId":"202","severity":1,"message":"242","line":2,"column":51,"nodeType":"204","messageId":"205","endLine":2,"endColumn":59},{"ruleId":"202","severity":1,"message":"243","line":2,"column":61,"nodeType":"204","messageId":"205","endLine":2,"endColumn":68},{"ruleId":"202","severity":1,"message":"244","line":2,"column":70,"nodeType":"204","messageId":"205","endLine":2,"endColumn":79},{"ruleId":"202","severity":1,"message":"245","line":2,"column":89,"nodeType":"204","messageId":"205","endLine":2,"endColumn":94},{"ruleId":"202","severity":1,"message":"246","line":2,"column":96,"nodeType":"204","messageId":"205","endLine":2,"endColumn":105},{"ruleId":"202","severity":1,"message":"247","line":2,"column":107,"nodeType":"204","messageId":"205","endLine":2,"endColumn":118},{"ruleId":"202","severity":1,"message":"248","line":2,"column":120,"nodeType":"204","messageId":"205","endLine":2,"endColumn":124},{"ruleId":"202","severity":1,"message":"249","line":2,"column":126,"nodeType":"204","messageId":"205","endLine":2,"endColumn":135},{"ruleId":"202","severity":1,"message":"250","line":2,"column":137,"nodeType":"204","messageId":"205","endLine":2,"endColumn":142},{"ruleId":"202","severity":1,"message":"251","line":2,"column":144,"nodeType":"204","messageId":"205","endLine":2,"endColumn":149},{"ruleId":"202","severity":1,"message":"252","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"213","line":2,"column":27,"nodeType":"204","messageId":"205","endLine":2,"endColumn":33},{"ruleId":"202","severity":1,"message":"215","line":2,"column":42,"nodeType":"204","messageId":"205","endLine":2,"endColumn":46},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"233","line":2,"column":81,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"215","line":5,"column":42,"nodeType":"204","messageId":"205","endLine":5,"endColumn":46},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"202","severity":1,"message":"217","line":5,"column":57,"nodeType":"204","messageId":"205","endLine":5,"endColumn":65},{"ruleId":"202","severity":1,"message":"253","line":120,"column":17,"nodeType":"204","messageId":"205","endLine":120,"endColumn":19},{"ruleId":"202","severity":1,"message":"254","line":122,"column":17,"nodeType":"204","messageId":"205","endLine":122,"endColumn":20},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"248","line":2,"column":45,"nodeType":"204","messageId":"205","endLine":2,"endColumn":49},{"ruleId":"202","severity":1,"message":"249","line":2,"column":51,"nodeType":"204","messageId":"205","endLine":2,"endColumn":60},{"ruleId":"202","severity":1,"message":"250","line":2,"column":62,"nodeType":"204","messageId":"205","endLine":2,"endColumn":67},{"ruleId":"202","severity":1,"message":"251","line":2,"column":69,"nodeType":"204","messageId":"205","endLine":2,"endColumn":74},{"ruleId":"202","severity":1,"message":"233","line":2,"column":81,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"255","line":2,"column":107,"nodeType":"204","messageId":"205","endLine":2,"endColumn":116},{"ruleId":"202","severity":1,"message":"245","line":2,"column":128,"nodeType":"204","messageId":"205","endLine":2,"endColumn":133},{"ruleId":"202","severity":1,"message":"247","line":2,"column":135,"nodeType":"204","messageId":"205","endLine":2,"endColumn":146},{"ruleId":"202","severity":1,"message":"246","line":2,"column":148,"nodeType":"204","messageId":"205","endLine":2,"endColumn":157},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"215","line":5,"column":42,"nodeType":"204","messageId":"205","endLine":5,"endColumn":46},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"202","severity":1,"message":"217","line":5,"column":57,"nodeType":"204","messageId":"205","endLine":5,"endColumn":65},{"ruleId":"202","severity":1,"message":"253","line":147,"column":17,"nodeType":"204","messageId":"205","endLine":147,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":2,"column":9,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"233","line":2,"column":81,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"255","line":2,"column":107,"nodeType":"204","messageId":"205","endLine":2,"endColumn":116},{"ruleId":"202","severity":1,"message":"208","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":5,"column":27,"nodeType":"204","messageId":"205","endLine":5,"endColumn":33},{"ruleId":"202","severity":1,"message":"214","line":5,"column":35,"nodeType":"204","messageId":"205","endLine":5,"endColumn":40},{"ruleId":"202","severity":1,"message":"215","line":5,"column":42,"nodeType":"204","messageId":"205","endLine":5,"endColumn":46},{"ruleId":"202","severity":1,"message":"216","line":5,"column":49,"nodeType":"204","messageId":"205","endLine":5,"endColumn":55},{"ruleId":"202","severity":1,"message":"217","line":5,"column":57,"nodeType":"204","messageId":"205","endLine":5,"endColumn":65},{"ruleId":"202","severity":1,"message":"256","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":62,"column":30,"nodeType":"236","messageId":"221","endLine":62,"endColumn":32},{"ruleId":"234","severity":1,"message":"235","line":114,"column":28,"nodeType":"236","messageId":"221","endLine":114,"endColumn":30},{"ruleId":"202","severity":1,"message":"253","line":198,"column":17,"nodeType":"204","messageId":"205","endLine":198,"endColumn":19},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'Alert' is defined but never used.","'render' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'n' is already defined.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property validate.","MemberExpression","unexpectedWhitespace",{"range":"259","text":"260"},"'Component' is defined but never used.",["257"],["258"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FormFeedback' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'NavItem' is defined but never used.","'Jumbotron' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'NavLink' is defined but never used.","'id' is assigned a value but never used.","'jid' is assigned a value but never used.","'CardTitle' is defined but never used.","'HeaderUser' is defined but never used.","no-global-assign","no-unsafe-negation",[1357,1359],"."]