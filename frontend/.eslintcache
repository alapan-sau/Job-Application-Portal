[{"/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx":"1","/Users/alapan/Documents/ssad/jap/frontend/src/index.js":"2","/Users/alapan/Documents/ssad/jap/frontend/src/components/CreateJob.jsx":"3","/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx":"4","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardUser.jsx":"5","/Users/alapan/Documents/ssad/jap/frontend/src/App.js":"6","/Users/alapan/Documents/ssad/jap/frontend/src/components/ViewApplications.jsx":"7","/Users/alapan/Documents/ssad/jap/frontend/src/reportWebVitals.js":"8","/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateUser.jsx":"9","/Users/alapan/Documents/ssad/jap/frontend/src/components/Main.jsx":"10","/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateRecruiter.jsx":"11","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardRecruiter.jsx":"12","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedJobApps.jsx":"13","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedApplicants.jsx":"14"},{"size":5155,"mtime":1611168498027,"results":"15","hashOfConfig":"16"},{"size":547,"mtime":1610768308116,"results":"17","hashOfConfig":"16"},{"size":10265,"mtime":1610973709027,"results":"18","hashOfConfig":"16"},{"size":14990,"mtime":1611003833810,"results":"19","hashOfConfig":"16"},{"size":11034,"mtime":1611182248504,"results":"20","hashOfConfig":"16"},{"size":297,"mtime":1610731233322,"results":"21","hashOfConfig":"16"},{"size":5582,"mtime":1611180145044,"results":"22","hashOfConfig":"16"},{"size":362,"mtime":1610721768994,"results":"23","hashOfConfig":"16"},{"size":10970,"mtime":1610999927714,"results":"24","hashOfConfig":"16"},{"size":4190,"mtime":1611157352354,"results":"25","hashOfConfig":"16"},{"size":5598,"mtime":1611003669364,"results":"26","hashOfConfig":"16"},{"size":7041,"mtime":1611172222124,"results":"27","hashOfConfig":"16"},{"size":5724,"mtime":1611179771649,"results":"28","hashOfConfig":"16"},{"size":8170,"mtime":1611179964046,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"1jb9lyc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx",["71","72","73","74","75","76","77","78","79"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\temail: '',\n            password: '',\n\t\t\tbearerToken:''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleUserSubmit = this.handleUserSubmit.bind(this);\n        this.handleRecruiterSubmit = this.handleRecruiterSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    handleUserSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/users/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log( response);\n            // window.location.replace(\"http://localhost:3000/users/login\");\n            this.props.clogin('Bearer '+response.data.token,'user');\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleRecruiterSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/recruiters/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log(response);\n            // window.location.replace(\"http://localhost:3000/users/login\");\n            this.props.clogin('Bearer '+response.data.token,'recruiter');\n        }).catch(error => {\n            alert(error.response);\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\n                                <Col md={10}>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" onClick={this.handleUserSubmit}>\n                                        Sign In as Applicant\n                                    </Button>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Button color=\"primary\" onClick={this.handleRecruiterSubmit}>\n                                        Sign In as Recruiter\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Login;","/Users/alapan/Documents/ssad/jap/frontend/src/index.js",[],["80","81"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/CreateJob.jsx",["82","83","84","85","86","87","88","89","90","91"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass CreateJob extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\ttitle: '',\n            type: '',\n            deadline:'',\n            skill:[''],\n            type:'',\n            salary:'',\n            maxAppli:'',\n            maxPos:'',\n            remAppli:'',\n            remPos:'',\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeSkill = this.removeSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n    }\n\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        let tok = name.split('-');\n        if(tok[0]==='skill'){\n            let sk = this.state.skill;\n            let pos = Number(tok[1]);\n            sk[pos] = value;\n            this.setState({skill:sk});\n        }\n        else{\n            this.setState({\n            [name]: value\n            });\n        }\n    }\n\n    addSkill(){\n        let sk = this.state.skill;\n        sk.push('');\n        this.setState({skill : sk});\n    }\n\n    removeSkill(idx){\n        let sk = this.state.skill;\n        sk.splice(idx,1);\n        this.setState({skill : sk});\n    }\n\n    renderSkill(){\n        let sk = this.state.skill;\n        let sks = sk.map((val,idx)=>{\n            let skIdx = `skill-${idx}`;\n            return(\n                <FormGroup row>\n                <Label htmlFor=\"type\" md={2}></Label>\n                <Col md={3}>\n                    <Input type=\"select\" name={skIdx} value={this.state.skill[idx]} onChange={this.handleInputChange}>\n                        <option value=''> Select Type</option>\n                        <option>C++</option>\n                        <option>Python</option>\n                    </Input>\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeSkill(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Skills</Label>\n                </FormGroup>\n                {sks}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addSkill}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n    }\n\n\n    handleSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/jobs\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log( response);\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n    render(){\n\n        let skills = this.renderSkill();\n\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"title\" md={2}>Title of Job</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"title\" name=\"title\"\n                                        placeholder=\"Name of the Job Profile\"\n                                        value={this.state.title}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"type\" md={2}>Type</Label>\n                                <Col md={10}>\n                                <Input type=\"select\" id=\"type\" name=\"type\"\n                                    placeholder=\"Type of your Job\"\n                                    value={this.state.type}\n                                    onChange={this.handleInputChange} >\n                                        <option value=''>Select Type</option>\n                                        <option>Full Time</option>\n                                        <option>Part Time</option>\n                                        <option>Work From Home</option>\n                                </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"salary\" name=\"salary\"\n                                    placeholder=\"Salary\"\n                                    value={this.state.salary}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"maxPos\" md={2}>Maximum Positions</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"maxPos\" name=\"maxPos\"\n                                    placeholder=\"Maximum Number of Positions to be filled\"\n                                    value={this.state.maxPos}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"maxAppli\" md={2}>Maximum Applications</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"maxAppli\" name=\"maxAppli\"\n                                    placeholder=\"Maximum Number of Applications\"\n                                    value={this.state.maxAppli}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"duration\" md={2}>Duration</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"duration\" name=\"duration\"\n                                    placeholder=\"Duration in Months\"\n                                    value={this.state.duration}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"deadline\" md={2}>Deadline</Label>\n                                <Col md={10}>\n                                <Input type=\"datetime-local\" id=\"deadline\" name=\"deadline\"\n                                    placeholder=\"Deadline to Fill\"\n                                    value={this.state.deadline}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            {skills}\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" type=\"submit\">\n                                        Create Job\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default CreateJob;","/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx",["92","93","94","95"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\n\nclass Signup extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            formtype: '',\n            firstName:'',\n            lastName:'',\n            email: '',\n            password: '',\n            education:[{institute:'', start:'',end:''}],\n            skill:[''],\n            telnum:'',\n            bio:'',\n            touched : {\n                firstName:false,\n                lastName:false,\n                email: false,\n                password: false,\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleUserChange = this.handleUserChange.bind(this);\n        this.renderEducation = this.renderEducation.bind(this);\n        this.addEducation = this.addEducation.bind(this);\n        this.removeEducation = this.removeEducation.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.removeSkill= this.removeSkill.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n\n        let tok = name.split('-');\n        if(tok[0]==='education'){\n            let ed = this.state.education;\n            let pos = Number(tok[1]);\n            let field = tok[2];\n            ed[pos][field] = value;\n            this.setState({education:ed});\n        }\n        else if(tok[0]==='skill'){\n            let sk = this.state.skill;\n            let pos = Number(tok[1]);\n            sk[pos] = value;\n            this.setState({skill:sk});\n        }\n        else{\n            this.setState({\n            [name]: value\n            });\n        }\n    }\n\n    validate(firstName,lastName,telnum,email) {\n        const errors={\n            firstName:'',\n            lastName:'',\n            telnum: '',\n            email: ''\n        };\n        if(this.state.touched.firstName && (firstName.length<3 || firstName.length>=10)){\n            errors.firstName='First Name should have 3-10 characters';\n        }\n        if(this.state.touched.lastName && (lastName.length<3 || lastName.length>=10)){\n            errors.lastName='Last Name should have 3-10 characters';\n        }\n        const reg = /^\\d+$/;\n        if(this.state.touched.telnum && !reg.test(telnum)){\n            errors.telnum='Telephone Number should have numbers';\n        }\n        return errors;\n    }\n\n    addEducation(){\n        let ed = this.state.education;\n        ed.push({institute:'', start:'',end:''});\n        this.setState({education : ed});\n    }\n\n    removeEducation(idx){\n        let ed = this.state.education;\n        ed.splice(idx,1);\n        this.setState({education : ed});\n    }\n\n    renderEducation(){\n        let ed = this.state.education;\n        let eds = ed.map((val,idx)=>{\n            let edIdx = `education-${idx}`;\n            return(\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={6}>\n                    <Input type=\"text\" name={edIdx+'-institute'}\n                        placeholder=\"Institute Name\"\n                        value={this.state.education[idx].institute}\n                        onChange={this.handleInputChange} />\n                    <Input type=\"number\" name={edIdx+'-start'}\n                        placeholder=\"Start Year\"\n                        value={this.state.education[idx].start}\n                        onChange={this.handleInputChange} />\n\n                    <Input type=\"number\" name={edIdx+'-end'}\n                        placeholder=\"End Year\"\n                        value={this.state.education[idx].end}\n                        onChange={this.handleInputChange} />\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeEducation(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Education</Label>\n                </FormGroup>\n                {eds}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addEducation}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n\n    }\n\n    addSkill(){\n        let sk = this.state.skill;\n        sk.push('');\n        this.setState({skill : sk});\n    }\n\n    removeSkill(idx){\n        let sk = this.state.skill;\n        sk.splice(idx,1);\n        this.setState({skill : sk});\n    }\n\n    renderSkill(){\n        let sk = this.state.skill;\n        let sks = sk.map((val,idx)=>{\n            let skIdx = `skill-${idx}`;\n            return(\n                <FormGroup row>\n                <Label htmlFor=\"type\" md={2}></Label>\n                <Col md={3}>\n                    <Input type=\"select\" name={skIdx} value={this.state.skill[idx]} onChange={this.handleInputChange}>\n                        <option value=''> Select Type</option>\n                        <option>C++</option>\n                        <option>Python</option>\n                    </Input>\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeSkill(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Skills</Label>\n                </FormGroup>\n                {sks}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addSkill}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n    }\n\n    handleUserChange(){\n        // console.log('Current State is: ' + JSON.stringify(this.state.formtype));\n        if(this.state.formtype===\"user\"){\n            let eds= this.renderEducation();\n            let sks= this.renderSkill();\n            return(\n                <div>\n                {eds}\n                {sks}\n                <FormGroup row>\n                    <Label htmlFor=\"photo\" md={2}>Profile Photo</Label>\n                    <Col md={10}>\n                        <Input type=\"file\"/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label htmlFor=\"resume\" md={2}>Resume</Label>\n                    <Col md={10}>\n                        <Input type=\"file\"/>\n                    </Col>\n                </FormGroup>\n                </div>\n            )\n        }\n        else if(this.state.formtype===\"recruiter\"){\n            return(\n                <div>\n                    <FormGroup row>\n                        <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\n                        <Col md={10}>\n                            <Input type=\"tel\" id=\"telnum\" name=\"telnum\" value={this.state.telnum} placeholder=\"Contact Number\" onChange={this.handleInputChange} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\" value={this.state.bio} onChange={this.handleInputChange} ></Input>\n                        </Col>\n                    </FormGroup>\n                </div>\n            );\n        }\n    }\n\n    handleSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n\n        if(this.state.formtype==='user')axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/users/signup\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Welcome! We have you successfully registered.\");\n            console.log(response)\n            window.location.replace(\"http://localhost:3001/login\");\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n                // this.setState({isError: true});\n                // this.setState({errors: error.response.data});\n            }\n        });\n        else if(this.state.formtype==='recruiter')axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/recruiters/signup\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Welcome! We have you successfully registered.\");\n            console.log(response)\n            window.location.replace(\"http://localhost:3001/login\");\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n                // this.setState({isError: true});\n                // this.setState({errors: error.response.data});\n            }\n        });\n        event.preventDefault();\n    }\n\n    handleBlur = (field)=> {\n        this.setState({\n            touched:{...this.state.touched,[field]:true}\n        });\n    }\n\n    render(){\n        const errors=this.validate(this.state.firstName,this.state.lastName,this.state.telnum,this.state.email)\n\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        valid={errors.firstName === ''}\n                                        invalid={errors.firstName !== ''}\n                                        onBlur={()=>{this.handleBlur('firstName')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.firstName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        valid={errors.lastName === ''}\n                                        invalid={errors.lastName !== ''}\n                                        onBlur={()=>{this.handleBlur('lastName')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.lastName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        valid={errors.email === ''}\n                                        invalid={errors.email !== ''}\n                                        onBlur={()=>{this.handleBlur('email')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\n                                <Col md={10}>\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\n                                        placeholder=\"Password\"\n                                        value={this.state.password}\n                                        // valid={errors.password === ''}\n                                        // invalid={errors.password !== ''}\n                                        onBlur={()=>{this.handleBlur('password')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.password}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                            <Label htmlFor=\"type\" md={2}>Sign up as </Label>\n                                <Col md={3}>\n                                    <Input type=\"select\" name=\"formtype\" value={this.state.formtype} onChange={this.handleInputChange}>\n                                        <option selected> Select Type</option>\n                                        <option>user</option>\n                                        <option>recruiter</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            {this.handleUserChange()}\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Sign Up\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Signup;",["96","97"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardUser.jsx",["98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback, Card, Row , CardTitle, CardText, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass DashboardUser extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n            joblist:[],\n            tempJoblist:[],\n            applist:[],\n            sortBy:'',\n            sortOrder:'desc',\n            salaryLow:null,\n            salaryHigh:null,\n            durationMax:null,\n            jobType:'All',\n            sop:'',\n            currentApplicationJobId:'',\n            isModalOpen : false\n        };\n\n        this.comp = this.comp.bind(this);\n        this.filt = this.filt.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.setSort = this.setSort.bind(this);\n        this.setFilter = this.setFilter.bind(this);\n        this.clear = this.clear.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.submitAppli = this.submitAppli.bind(this);\n        this.getData = this.getData.bind(this);\n    }\n\n    toggleModal(event)\n    {\n        if(this.state.isModalOpen === false)\n        {\n            var jid = event.target.id;\n            //console.log(temp);\n            this.setState({\n                isModalOpen: true,\n                currentApplicationJobId: jid,\n                sop:'',\n            });\n        }\n        else\n        {\n            this.setState({\n                isModalOpen: false,\n                currentApplicationJobId:'',\n                sop:''\n            });\n        }\n    }\n\n    submitAppli(event){\n        event.preventDefault();\n        var jid = this.state.currentApplicationJobId;\n        console.log(jid);\n        var endpoint = \"http://localhost:3000/applications/apply/\"+jid;\n        var data = {};\n        data.sop = this.state.sop;\n        axios({\n            method: \"POST\",\n            url: endpoint,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log(response.data);\n            this.setState({isModalOpen:false});\n            this.getData();\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    comp(a,b){\n        let by = this.state.sortBy;\n        let order = this.state.order;\n\n        let factor = 0;\n        if(order==='asc')factor = 0;\n        else if(order==='desc')factor = 1;\n\n        if(a[by]!==undefined && b[by]!==undefined)\n                    return (1-2*factor)*(a[by] - b[by]);\n        else\n            return 1;\n    }\n\n    filt(obj){\n        let val = 1;\n        if(this.state.salaryHigh!==null && this.state.salaryLow!==null){\n            val = val && (obj.salary < this.state.salaryHigh && obj.salary >this.state.salaryLow)\n        }\n        if(this.state.jobType!=='All'){\n                val = val && (obj.type===this.state.jobType);\n        }\n        if(this.state.durationMax!==null){\n            val = val && (obj.duration < this.state.durationMax);\n        }\n        console.log(val);\n        return val;\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    setSort(event){\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            sortBy : name\n        });\n        if(this.state.order=='desc'){\n            this.setState({\n                order : 'asc'\n            });\n        }\n        else{\n            this.setState({\n                order : 'desc'\n            });\n        }\n    }\n\n    setFilter(){\n        console.log('I camr here');\n        let temp = this.state.tempJoblist;\n        temp = temp.filter(this.filt);\n        console.log('I camr temp');\n        console.log(temp);\n        this.setState({tempJoblist:temp});\n\n    }\n\n    clear(){\n        this.getData();\n    }\n\n    getData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/jobs\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert(JSON.stringify(response));\n            // console.log(response);\n            this.setState({\n                joblist:response.data,\n                tempJoblist:response.data\n            })\n            // console.log(this.state.joblist);\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/applications/myapplications/\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert(JSON.stringify(response));\n            // console.log(response);\n            this.setState({\n                applist:response.data\n            })\n            // console.log(this.state.applist);\n        }).catch(error => {\n            //alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render(){\n        console.log(this.state.tempJoblist);\n        console.log(this.state.applist)\n\n        let allApp = this.state.applist;\n        let allAppliedJob = allApp.map((app)=>{\n            return(app.job._id);\n        })\n\n        let allJob = this.state.tempJoblist;\n\n        if(this.state.sortBy!='') allJob.sort(this.comp);\n\n        let jobs = allJob.map((job)=>{\n            let id = job._id;\n            let title = job.title;\n            let skills = job.skills;\n            let deadline = job.deadline;\n            let remAppli = job.remAppli;\n            let remPos = job.remPos;\n            let type = job.type;\n\n            let ButtonApply = <Button id={job._id} onClick={this.toggleModal}>Apply</Button>\n            let ButtonApplied = <Button>Applied</Button>\n            let ButtonFull = <Button>Full</Button>\n\n            let usedButton;\n            if(allAppliedJob.includes(id)){\n                usedButton = ButtonApplied\n            }\n            else{\n                if(remAppli==0 || remPos==0){\n                    usedButton = ButtonFull\n                }\n                else{\n                    usedButton = ButtonApply\n                }\n            }\n            return(\n                <Row>\n                <Col>\n                  <Card body>\n                    <CardTitle tag=\"h5\">{title}</CardTitle>\n                    <CardText>Id : {job._id}</CardText>\n                    <CardText>Skills : {skills}</CardText>\n                    <CardText>Deadline : {deadline}</CardText>\n                    <CardText>Remaining Applications : {remAppli}</CardText>\n                    <CardText>Remaining Positions : {remPos}</CardText>\n                    <CardText>Type of Job : {type}</CardText>\n                    <CardText>Job Creator : {job.creator.email}</CardText>\n                    <CardText>Salary : {job.salary}</CardText>\n                    <CardText>Duration : {job.duration}</CardText>\n                    <CardText>Rating : {job.rating}</CardText>\n                    {usedButton}\n                  </Card>\n                </Col>\n                </Row>\n            )\n        });\n\n        return(\n            <div className=\"container\">\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label htmlFor=\"sop\">SOP</Label>\n                                <Input type=\"textarea\" id=\"sop\" name=\"sop\"  onChange={this.handleInputChange}/>\n                            </FormGroup>\n                            <Button color=\"primary\" onClick={this.submitAppli}>Submit Application</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                <Form>\n                    <FormGroup row>\n                    <Label htmlFor=\"jobType\" md={2}>Job Type</Label>\n                    <Col md={3}>\n                    <Input type=\"select\" name=\"jobType\" id=\"jobType\" value={this.state.jobType} onChange={this.handleInputChange}>\n                        <option>All</option>\n                        <option>Full Time</option>\n                        <option>Part Time</option>\n                        <option>Work From Home</option>\n                    </Input>\n                    </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                    <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                    <Col md={3}>\n                    <Input type=\"number\" name=\"salaryLow\"value={this.state.salaryLow} onChange={this.handleInputChange}></Input>\n                    <Input type=\"number\" name=\"salaryHigh\"value={this.state.salaryHigh} onChange={this.handleInputChange}></Input>\n                    </Col>\n                    <Label htmlFor=\"durationMax\" md={2}>Duration</Label>\n                    <Col md={3}>\n                    <Input type=\"number\" name=\"durationMax\"value={this.state.duration} onChange={this.handleInputChange}></Input>\n                    </Col>\n                    </FormGroup>\n                    <FormGroup row >\n                    <Col md={6}>\n                    <Button name=\"filterApply\" onClick={this.setFilter}> Apply</Button>\n                    </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                    <Col md={6}>\n                    <Button onClick={this.clear}>Clear</Button>\n                    </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                    <Col md={6}> <Button row name=\"salary\" onClick={this.setSort}>Sort By Salary</Button></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                    <Col md={6}> <Button row name=\"duration\"  onClick={this.setSort}>Sort By Duration</Button></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                    <Col md={6}> <Button row name=\"rating\" onClick={this.setSort}>Sort By Rating</Button></Col>\n                    </FormGroup>\n                    </Form>\n                {jobs}\n            </div>\n        );\n    }\n}\n\nexport default DashboardUser;\n\n\n","/Users/alapan/Documents/ssad/jap/frontend/src/App.js",["111"],"import React,{ Component } from 'react';\nimport Main from './components/Main';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Main />\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n",["112","113"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/ViewApplications.jsx",["114","115","116","117","118","119","120","121","122","123","124"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback, Card, Row , CardTitle, CardText, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\nclass ViewApplications extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n            applist:[],\n            appid : '',\n            rate:'',\n            isModalOpen:false\n        };\n\n        this.getData = this.getData.bind(this);\n        this.submitRating = this.submitRating.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n\n    }\n\n    getData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/applications/myapplications/\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            this.setState({\n                applist:response.data\n            })\n        }).catch(error => {\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    submitRating(event){\n        event.preventDefault();\n        var appid = this.state.appid;\n        console.log(appid);\n        var endpoint = \"http://localhost:3000/jobs/rate/\"+appid;\n        var data = {};\n        data.rate = this.state.rate;\n        axios({\n            method: \"POST\",\n            url: endpoint,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log(response.data);\n            this.setState({isModalOpen:false});\n            this.getData();\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    toggleModal(event)\n    {\n        if(this.state.isModalOpen === false)\n        {\n            var appid = event.target.id;\n            //console.log(temp);\n            this.setState({\n                isModalOpen: true,\n                appid : appid,\n                rate:'',\n            });\n        }\n        else\n        {\n            this.setState({\n                isModalOpen: false,\n                appid:'',\n                rate:''\n            });\n        }\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render(){\n\n        console.log(this.state.applist);\n\n        let allApps = this.state.applist;\n\n        let apps = allApps.map((app)=>{\n            let id = app._id\n            let title = app.job.title;\n            let jid = app.job._id;\n\n            let ButtonRate=<Button></Button>;\n            if(app.status==='pending')ButtonRate = <Button>Pending</Button>\n            else if(app.status==='selected' && app.rated===false) ButtonRate = <Button id={app._id} onClick={this.toggleModal}>You are Selected, Rate</Button>\n            else if(app.status==='selected' && app.rated===true) ButtonRate = <Button >Selected, Already Rated</Button>\n            else if(app.status==='shortlisted') ButtonRate = <Button >Shortlisted </Button>\n            else if(app.status==='rejected') ButtonRate = <Button >Rejected </Button>\n\n\n            return(\n                <Row>\n                <Col>\n                  <Card body>\n                    <CardTitle tag=\"h5\">{title}</CardTitle>\n                    <CardText>Id : {app._id}</CardText>\n                    <CardText>Type of Job : {app.job.type}</CardText>\n                    <CardText>Duration : {app.job.duration}</CardText>\n                    <CardText>SOP : {app.sop}</CardText>\n                    <CardText>Rated: {String(app.rated)}</CardText>\n                    <CardText>Status : {app.status}</CardText>\n                    <CardText>Rating: {app.job.rating}</CardText>\n                    {ButtonRate}\n                  </Card>\n                </Col>\n                </Row>\n            )\n        });\n\n        return(<div className=\"container\">\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label htmlFor=\"rate\">Rating</Label>\n                            <Input type=\"select\" id=\"rate\" name=\"rate\"  value={this.state.rate} onChange={this.handleInputChange}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                            </Input>\n                        </FormGroup>\n                        <Button color=\"primary\" onClick={this.submitRating}>Submit Application</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            {apps}\n        </div>)\n    }\n}\n\nexport default ViewApplications;","/Users/alapan/Documents/ssad/jap/frontend/src/reportWebVitals.js",[],["125","126"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateUser.jsx",["127","128","129","130","131"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\n\nclass UpdateUser extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            firstName:'',\n            lastName:'',\n            email: '',\n            education:[],\n            skill:[],\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.renderEducation = this.renderEducation.bind(this);\n        this.addEducation = this.addEducation.bind(this);\n        this.removeEducation = this.removeEducation.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.removeSkill= this.removeSkill.bind(this);\n        this.setUpData= this.setUpData.bind(this);\n    }\n\n    setUpData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/users/me\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            alert(JSON.stringify(response.data));\n            this.setState({\n                firstName: response.data.firstName,\n                lastName: response.data.lastName,\n                email: response.data.email,\n                education: response.data.education,\n                skill:response.data.skills,\n            })\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    componentDidMount(){\n        this.setUpData();\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n\n        let tok = name.split('-');\n        if(tok[0]==='education'){\n            let ed = this.state.education;\n            let pos = Number(tok[1]);\n            let field = tok[2];\n            ed[pos][field] = value;\n            this.setState({education:ed});\n        }\n        else if(tok[0]==='skill'){\n            let sk = this.state.skill;\n            let pos = Number(tok[1]);\n            sk[pos] = value;\n            this.setState({skill:sk});\n        }\n        else{\n            this.setState({\n            [name]: value\n            });\n        }\n    }\n\n    addEducation(){\n        let ed = this.state.education;\n        ed.push({institute:'', start:'',end:''});\n        this.setState({education : ed});\n    }\n\n    removeEducation(idx){\n        let ed = this.state.education;\n        ed.splice(idx,1);\n        this.setState({education : ed});\n    }\n\n    renderEducation(){\n        console.log(\"Look here\");\n        console.log(this.state.skill)\n        let ed = this.state.education;\n        let eds = ed.map((val,idx)=>{\n            let edIdx = `education-${idx}`;\n            return(\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={6}>\n                    <Input type=\"text\" name={edIdx+'-institute'}\n                        placeholder=\"Institute Name\"\n                        value={this.state.education[idx].institute}\n                        onChange={this.handleInputChange} />\n                    <Input type=\"number\" name={edIdx+'-start'}\n                        placeholder=\"Start Year\"\n                        value={this.state.education[idx].start}\n                        onChange={this.handleInputChange} />\n\n                    <Input type=\"number\" name={edIdx+'-end'}\n                        placeholder=\"End Year\"\n                        value={this.state.education[idx].end}\n                        onChange={this.handleInputChange} />\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeEducation(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Education</Label>\n                </FormGroup>\n                {eds}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addEducation}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n        );\n    }\n\n    addSkill(){\n        let sk = this.state.skill;\n        sk.push('');\n        this.setState({skill : sk});\n    }\n\n    removeSkill(idx){\n        let sk = this.state.skill;\n        sk.splice(idx,1);\n        this.setState({skill : sk});\n    }\n\n    renderSkill(){\n        let sk = this.state.skill;\n        console.log(sk);\n        let sks = sk.map((val,idx)=>{\n            let skIdx = `skill-${idx}`;\n            return(\n                <FormGroup row>\n                <Label htmlFor=\"type\" md={2}></Label>\n                <Col md={3}>\n                    <Input type=\"select\" name={skIdx} value={this.state.skill[idx]} onChange={this.handleInputChange}>\n                        <option value=''> Select Type</option>\n                        <option>C++</option>\n                        <option>Python</option>\n                    </Input>\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeSkill(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Skills</Label>\n                </FormGroup>\n                {sks}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addSkill}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n    }\n\n    handleSubmit(event) {\n        alert('Current State is: ' + JSON.stringify(this.state));\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/users/me\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Done\");\n            console.log(response)\n        }).catch(error => {\n            alert(\"Not Done!!\");\n            if (error) {\n                console.log(error.response);\n            }\n        });\n        event.preventDefault();\n    }\n\n    render(){\n        let eds= this.renderEducation();\n        let sks= this.renderSkill();\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        // valid={errors.firstName === ''}\n                                        // invalid={errors.firstName !== ''}\n                                        // onBlur={()=>{this.handleBlur('firstName')}}\n                                        onChange={this.handleInputChange} />\n                                    {/* <FormFeedback>{errors.firstName}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        // valid={errors.lastName === ''}\n                                        // invalid={errors.lastName !== ''}\n                                        // onBlur={()=>{this.handleBlur('lastName')}}\n                                        onChange={this.handleInputChange} />\n                                    {/* <FormFeedback>{errors.lastName}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        // valid={errors.email === ''}\n                                        // invalid={errors.email !== ''}\n                                        // onBlur={()=>{this.handleBlur('email')}}\n                                        onChange={this.handleInputChange} />\n                                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            {eds}\n                            {sks}\n                            <FormGroup row>\n                            <Label htmlFor=\"photo\" md={2}>Profile Photo</Label>\n                            <Col md={10}>\n                                <Input type=\"file\"/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label htmlFor=\"resume\" md={2}>Resume</Label>\n                            <Col md={10}>\n                                <Input type=\"file\"/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col md={{size: 10, offset: 2}}>\n                                <Button type=\"submit\" color=\"primary\">\n                                    Edit\n                                </Button>\n                            </Col>\n                        </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default UpdateUser;","/Users/alapan/Documents/ssad/jap/frontend/src/components/Main.jsx",["132","133"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/UpdateRecruiter.jsx",["134","135","136","137","138"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\n\nclass UpdateUser extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            firstName:'',\n            lastName:'',\n            email: '',\n            bio:'',\n            telnum:'',\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setUpData= this.setUpData.bind(this);\n    }\n\n    setUpData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/recruiters/me\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            alert(JSON.stringify(response.data));\n            this.setState({\n                firstName: response.data.firstName,\n                lastName: response.data.lastName,\n                email: response.data.email,\n                telnum: response.data.telnum,\n                bio:response.data.bio\n            })\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    componentDidMount(){\n        this.setUpData();\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n\n        this.setState({\n        [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        alert('Current State is: ' + JSON.stringify(this.state));\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/recruiters/me\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Done\");\n            console.log(response)\n        }).catch(error => {\n            alert(\"Not Done!!\");\n            if (error) {\n                console.log(error.response);\n            }\n        });\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                            <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Contact Number\" onChange={this.handleInputChange} value={this.state.telnum}/>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\" value={this.state.bio} onChange={this.handleInputChange} ></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Edit\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default UpdateUser;","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardRecruiter.jsx",["139","140","141","142","143","144","145","146","147"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback, Card, Row , CardTitle, CardText, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass DashboardRecruiter extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n            joblist:[],\n            isModalOpen:false,\n            maxAppli:'',\n            maxPos:'',\n            deadline:'',\n            selectedId:''\n        };\n        this.getData = this.getData.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.getJobData = this.getJobData.bind(this);\n        this.submitEdit = this.submitEdit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    getData(){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/jobs/myjobs\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // console.log(response.data);\n            this.setState({\n                joblist:response.data,\n            })\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    getJobData(jid){\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/jobs/\"+jid,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            // alert('getting edit data');\n            console.log(response.data);\n            this.setState({\n                isModalOpen: true,\n                maxAppli: response.data.maxAppli,\n                maxPos: response.data.maxPos,\n                deadline: response.data.deadline,\n                selectedId:jid\n            });\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleDelete(event){\n        let jid = event.target.id;\n        axios({\n            method: \"DELETE\",\n            url: \"http://localhost:3000/jobs/\"+jid,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            this.getData();\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    toggleModal(event)\n    {\n        if(this.state.isModalOpen === false)\n        {\n            var jid = event.target.id;\n            this.getJobData(jid)\n        }\n        else\n        {\n            this.getData();\n            this.setState({\n                isModalOpen: false,\n                maxAppli: '',\n                maxPos:'',\n                deadline:'',\n                selectedId:'',\n            });\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    submitEdit(){\n        let obj={};\n        obj.maxAppli = this.state.maxAppli;\n        obj.maxPos = this.state.maxPos;\n        obj.deadline = this.state.deadline;\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/jobs/\"+this.state.selectedId,\n            data:obj,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            console.log(response.data);\n            this.getData();\n            this.setState({isModalOpen:false});\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    render(){\n\n        let allJob = this.state.joblist;\n        let jobs = allJob.map((job)=>{\n\n            if(job.remPos==0) return null;\n            return(\n                <Row>\n                <Col>\n                  <Card body>\n                    <CardTitle tag=\"h5\">{job.title}</CardTitle>\n                    <CardText>Id : {job._id}</CardText>\n                    <CardText>Skills : {job.skills}</CardText>\n                    <CardText>Deadline : {job.deadline}</CardText>\n                    <CardText>Remaining Applications : {job.remAppli}</CardText>\n                    <CardText>Remaining Positions : {job.remPos}</CardText>\n                    <CardText>Type of Job : {job.type}</CardText>\n                    <CardText>Salary : {job.salary}</CardText>\n                    <CardText>Duration : {job.duration}</CardText>\n                    <CardText>Rating : {job.rating}</CardText>\n                    <Button id={job._id} onClick = {this.toggleModal}>Edit Job</Button>\n                    <Button id={job._id} onClick = {this.handleDelete}>Delete Job</Button>\n                    <Link to={`/recruiters/${job._id}`}>\n                    <Button id={job._id}>\n                        View Applications\n                    </Button>\n                    </Link>\n                    </Card>\n                </Col>\n                </Row>\n            )\n        });\n\n        return(\n            <div className=\"container\">\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label htmlFor=\"maxAppli\">Maximum Applications</Label>\n                                <Input type=\"Number\" id=\"maxAppli\" name=\"maxAppli\" value={this.state.maxAppli} onChange={this.handleInputChange}/>\n                                <Label htmlFor=\"maxPos\">Maximum Positions</Label>\n                                <Input type=\"Number\" id=\"maxPos\" name=\"maxPos\" value={this.state.maxPos} onChange={this.handleInputChange}/>\n                                <Label htmlFor=\"deadline\">Deadline</Label>\n                                <Input type=\"datetime\" id=\"deadline\" name=\"deadline\" value={this.state.deadline} onChange={this.handleInputChange}/>\n                            </FormGroup>\n                            <Button color=\"primary\" onClick={this.submitEdit}>Submit Application</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                {jobs}\n            </div>\n        );\n    }\n}\n\nexport default DashboardRecruiter;\n\n\n","/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedJobApps.jsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/SelectedApplicants.jsx",["166","167","168","169","170","171","172","173","174","175","176","177","178"],{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"188","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"188","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"195","severity":1,"message":"196","line":17,"column":13,"nodeType":"197","messageId":"198","endLine":17,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"188","line":3,"column":9,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"191","replacedBy":"199"},{"ruleId":"193","replacedBy":"200"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"188","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":132,"column":28,"nodeType":"203","messageId":"198","endLine":132,"endColumn":30},{"ruleId":"201","severity":1,"message":"204","line":217,"column":29,"nodeType":"203","messageId":"198","endLine":217,"endColumn":31},{"ruleId":"201","severity":1,"message":"202","line":237,"column":28,"nodeType":"203","messageId":"198","endLine":237,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":237,"column":41,"nodeType":"203","messageId":"198","endLine":237,"endColumn":43},{"ruleId":"179","severity":1,"message":"205","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"191","replacedBy":"206"},{"ruleId":"193","replacedBy":"207"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"188","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"179","severity":1,"message":"208","line":114,"column":17,"nodeType":"181","messageId":"182","endLine":114,"endColumn":19},{"ruleId":"179","severity":1,"message":"209","line":116,"column":17,"nodeType":"181","messageId":"182","endLine":116,"endColumn":20},{"ruleId":"191","replacedBy":"210"},{"ruleId":"193","replacedBy":"211"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"188","line":3,"column":9,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":2,"column":27,"nodeType":"181","messageId":"182","endLine":2,"endColumn":33},{"ruleId":"179","severity":1,"message":"188","line":2,"column":42,"nodeType":"181","messageId":"182","endLine":2,"endColumn":46},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"188","line":3,"column":9,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":156,"column":26,"nodeType":"203","messageId":"198","endLine":156,"endColumn":28},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"212","line":2,"column":45,"nodeType":"181","messageId":"182","endLine":2,"endColumn":49},{"ruleId":"179","severity":1,"message":"213","line":2,"column":51,"nodeType":"181","messageId":"182","endLine":2,"endColumn":60},{"ruleId":"179","severity":1,"message":"214","line":2,"column":62,"nodeType":"181","messageId":"182","endLine":2,"endColumn":67},{"ruleId":"179","severity":1,"message":"215","line":2,"column":69,"nodeType":"181","messageId":"182","endLine":2,"endColumn":74},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"216","line":2,"column":107,"nodeType":"181","messageId":"182","endLine":2,"endColumn":116},{"ruleId":"179","severity":1,"message":"217","line":2,"column":128,"nodeType":"181","messageId":"182","endLine":2,"endColumn":133},{"ruleId":"179","severity":1,"message":"218","line":2,"column":135,"nodeType":"181","messageId":"182","endLine":2,"endColumn":146},{"ruleId":"179","severity":1,"message":"219","line":2,"column":148,"nodeType":"181","messageId":"182","endLine":2,"endColumn":157},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"188","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"179","severity":1,"message":"208","line":144,"column":17,"nodeType":"181","messageId":"182","endLine":144,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":19},{"ruleId":"179","severity":1,"message":"183","line":2,"column":21,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"184","line":2,"column":81,"nodeType":"181","messageId":"182","endLine":2,"endColumn":93},{"ruleId":"179","severity":1,"message":"216","line":2,"column":107,"nodeType":"181","messageId":"182","endLine":2,"endColumn":116},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"186","line":5,"column":27,"nodeType":"181","messageId":"182","endLine":5,"endColumn":33},{"ruleId":"179","severity":1,"message":"187","line":5,"column":35,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"188","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"189","line":5,"column":49,"nodeType":"181","messageId":"182","endLine":5,"endColumn":55},{"ruleId":"179","severity":1,"message":"190","line":5,"column":57,"nodeType":"181","messageId":"182","endLine":5,"endColumn":65},{"ruleId":"201","severity":1,"message":"202","line":57,"column":30,"nodeType":"203","messageId":"198","endLine":57,"endColumn":32},{"ruleId":"201","severity":1,"message":"202","line":109,"column":28,"nodeType":"203","messageId":"198","endLine":109,"endColumn":30},{"ruleId":"179","severity":1,"message":"208","line":188,"column":17,"nodeType":"181","messageId":"182","endLine":188,"endColumn":19},"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'FormFeedback' is defined but never used.","'render' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected",["220"],["221"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'Component' is defined but never used.",["220"],["221"],"'id' is assigned a value but never used.","'jid' is assigned a value but never used.",["220"],["221"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'CardTitle' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation"]