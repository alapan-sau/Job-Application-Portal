[{"/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx":"1","/Users/alapan/Documents/ssad/jap/frontend/src/index.js":"2","/Users/alapan/Documents/ssad/jap/frontend/src/components/CreateJob.jsx":"3","/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx":"4","/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardUser.jsx":"5"},{"size":5271,"mtime":1610950162088,"results":"6","hashOfConfig":"7"},{"size":547,"mtime":1610768308116,"results":"8","hashOfConfig":"7"},{"size":10265,"mtime":1610973476056,"results":"9","hashOfConfig":"7"},{"size":14941,"mtime":1610964225889,"results":"10","hashOfConfig":"7"},{"size":10675,"mtime":1610970140526,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1jb9lyc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx",["25","26","27","28","29","30","31","32","33"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\temail: '',\n            password: '',\n\t\t\tbearerToken:''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleUserSubmit = this.handleUserSubmit.bind(this);\n        this.handleRecruiterSubmit = this.handleRecruiterSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    handleUserSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/users/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log( response);\n            // window.location.replace(\"http://localhost:3000/users/login\");\n            this.props.clogin('Bearer '+response.data.token,'user');\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleRecruiterSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/recruiters/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log(response);\n            // window.location.replace(\"http://localhost:3000/users/login\");\n            this.props.clogin('Bearer '+response.data.token,'recruiter');\n        }).catch(error => {\n            alert(error.response);\n            if (error) {\n                console.log(error.response);\n                // this.setState({isError: true});\n                // this.setState({errors: error.response.data});\n            }\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\n                                <Col md={10}>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" onClick={this.handleUserSubmit}>\n                                        Sign In as Applicant\n                                    </Button>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Button color=\"primary\" onClick={this.handleRecruiterSubmit}>\n                                        Sign In as Recruiter\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Login;","/Users/alapan/Documents/ssad/jap/frontend/src/index.js",[],["34","35"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/CreateJob.jsx",["36","37","38","39","40","41","42","43","44","45"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass CreateJob extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\ttitle: '',\n            type: '',\n            deadline:'',\n            skill:[''],\n            type:'',\n            salary:'',\n            maxAppli:'',\n            maxPos:'',\n            remAppli:'',\n            remPos:'',\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.removeSkill = this.removeSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n    }\n\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        let tok = name.split('-');\n        if(tok[0]==='skill'){\n            let sk = this.state.skill;\n            let pos = Number(tok[1]);\n            sk[pos] = value;\n            this.setState({skill:sk});\n        }\n        else{\n            this.setState({\n            [name]: value\n            });\n        }\n    }\n\n    addSkill(){\n        let sk = this.state.skill;\n        sk.push('');\n        this.setState({skill : sk});\n    }\n\n    removeSkill(idx){\n        let sk = this.state.skill;\n        sk.splice(idx,1);\n        this.setState({skill : sk});\n    }\n\n    renderSkill(){\n        let sk = this.state.skill;\n        let sks = sk.map((val,idx)=>{\n            let skIdx = `skill-${idx}`;\n            return(\n                <FormGroup row>\n                <Label htmlFor=\"type\" md={2}></Label>\n                <Col md={3}>\n                    <Input type=\"select\" name={skIdx} value={this.state.skill[idx]} onChange={this.handleInputChange}>\n                        <option value=''> Select Type</option>\n                        <option>C++</option>\n                        <option>Python</option>\n                    </Input>\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeSkill(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Skills</Label>\n                </FormGroup>\n                {sks}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addSkill}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n    }\n\n\n    handleSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/jobs\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log( response);\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n    render(){\n\n        let skills = this.renderSkill();\n\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"title\" md={2}>Title of Job</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"title\" name=\"title\"\n                                        placeholder=\"Name of the Job Profile\"\n                                        value={this.state.title}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"type\" md={2}>Type</Label>\n                                <Col md={10}>\n                                <Input type=\"select\" id=\"type\" name=\"type\"\n                                    placeholder=\"Type of your Job\"\n                                    value={this.state.type}\n                                    onChange={this.handleInputChange} >\n                                        <option value=''>Select Type</option>\n                                        <option>Full Time</option>\n                                        <option>Part Time</option>\n                                        <option>Work From Home</option>\n                                </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"salary\" name=\"salary\"\n                                    placeholder=\"Salary\"\n                                    value={this.state.salary}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"maxPos\" md={2}>Maximum Positions</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"maxPos\" name=\"maxPos\"\n                                    placeholder=\"Maximum Number of Positions to be filled\"\n                                    value={this.state.maxPos}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"maxAppli\" md={2}>Maximum Applications</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"maxAppli\" name=\"maxAppli\"\n                                    placeholder=\"Maximum Number of Applications\"\n                                    value={this.state.maxAppli}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"duration\" md={2}>Duration</Label>\n                                <Col md={10}>\n                                <Input type=\"Number\" id=\"duration\" name=\"duration\"\n                                    placeholder=\"Duration in Months\"\n                                    value={this.state.duration}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"deadline\" md={2}>Deadline</Label>\n                                <Col md={10}>\n                                <Input type=\"datetime-local\" id=\"deadline\" name=\"deadline\"\n                                    placeholder=\"Deadline to Fill\"\n                                    value={this.state.deadline}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            {skills}\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" type=\"submit\">\n                                        Create Job\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default CreateJob;","/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx",["46","47","48","49"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/DashboardUser.jsx",["50","51","52","53","54","55","56","57","58","59","60","61","62"],{"ruleId":"63","severity":1,"message":"64","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":35},{"ruleId":"63","severity":1,"message":"68","line":2,"column":81,"nodeType":"65","messageId":"66","endLine":2,"endColumn":93},{"ruleId":"63","severity":1,"message":"69","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":16},{"ruleId":"63","severity":1,"message":"70","line":5,"column":27,"nodeType":"65","messageId":"66","endLine":5,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":5,"column":35,"nodeType":"65","messageId":"66","endLine":5,"endColumn":40},{"ruleId":"63","severity":1,"message":"72","line":5,"column":42,"nodeType":"65","messageId":"66","endLine":5,"endColumn":46},{"ruleId":"63","severity":1,"message":"73","line":5,"column":49,"nodeType":"65","messageId":"66","endLine":5,"endColumn":55},{"ruleId":"63","severity":1,"message":"74","line":5,"column":57,"nodeType":"65","messageId":"66","endLine":5,"endColumn":65},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":35},{"ruleId":"63","severity":1,"message":"68","line":2,"column":81,"nodeType":"65","messageId":"66","endLine":2,"endColumn":93},{"ruleId":"63","severity":1,"message":"69","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":16},{"ruleId":"63","severity":1,"message":"70","line":5,"column":27,"nodeType":"65","messageId":"66","endLine":5,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":5,"column":35,"nodeType":"65","messageId":"66","endLine":5,"endColumn":40},{"ruleId":"63","severity":1,"message":"72","line":5,"column":42,"nodeType":"65","messageId":"66","endLine":5,"endColumn":46},{"ruleId":"63","severity":1,"message":"73","line":5,"column":49,"nodeType":"65","messageId":"66","endLine":5,"endColumn":55},{"ruleId":"63","severity":1,"message":"74","line":5,"column":57,"nodeType":"65","messageId":"66","endLine":5,"endColumn":65},{"ruleId":"79","severity":1,"message":"80","line":17,"column":13,"nodeType":"81","messageId":"82","endLine":17,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":35},{"ruleId":"63","severity":1,"message":"72","line":3,"column":9,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"63","severity":1,"message":"69","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":35},{"ruleId":"63","severity":1,"message":"68","line":2,"column":81,"nodeType":"65","messageId":"66","endLine":2,"endColumn":93},{"ruleId":"63","severity":1,"message":"69","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":16},{"ruleId":"63","severity":1,"message":"70","line":5,"column":27,"nodeType":"65","messageId":"66","endLine":5,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":5,"column":35,"nodeType":"65","messageId":"66","endLine":5,"endColumn":40},{"ruleId":"63","severity":1,"message":"72","line":5,"column":42,"nodeType":"65","messageId":"66","endLine":5,"endColumn":46},{"ruleId":"63","severity":1,"message":"73","line":5,"column":49,"nodeType":"65","messageId":"66","endLine":5,"endColumn":55},{"ruleId":"63","severity":1,"message":"74","line":5,"column":57,"nodeType":"65","messageId":"66","endLine":5,"endColumn":65},{"ruleId":"83","severity":1,"message":"84","line":132,"column":28,"nodeType":"85","messageId":"82","endLine":132,"endColumn":30},{"ruleId":"83","severity":1,"message":"86","line":215,"column":29,"nodeType":"85","messageId":"82","endLine":215,"endColumn":31},{"ruleId":"83","severity":1,"message":"84","line":235,"column":28,"nodeType":"85","messageId":"82","endLine":235,"endColumn":30},{"ruleId":"83","severity":1,"message":"84","line":235,"column":41,"nodeType":"85","messageId":"82","endLine":235,"endColumn":43},"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'FormFeedback' is defined but never used.","'render' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]