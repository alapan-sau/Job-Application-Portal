[{"/Users/alapan/Documents/ssad/jap/frontend/src/reportWebVitals.js":"1","/Users/alapan/Documents/ssad/jap/frontend/src/App.js":"2","/Users/alapan/Documents/ssad/jap/frontend/src/index.js":"3","/Users/alapan/Documents/ssad/jap/frontend/src/components/Main.jsx":"4","/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx":"5","/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx":"6"},{"size":362,"mtime":1610721768994,"results":"7","hashOfConfig":"8"},{"size":297,"mtime":1610731233322,"results":"9","hashOfConfig":"8"},{"size":547,"mtime":1610768308116,"results":"10","hashOfConfig":"8"},{"size":2651,"mtime":1610819358308,"results":"11","hashOfConfig":"8"},{"size":14932,"mtime":1610817581135,"results":"12","hashOfConfig":"8"},{"size":5180,"mtime":1610819096498,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jb9lyc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/alapan/Documents/ssad/jap/frontend/src/reportWebVitals.js",[],"/Users/alapan/Documents/ssad/jap/frontend/src/App.js",["29"],"import React,{ Component } from 'react';\nimport Main from './components/Main';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Main />\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/alapan/Documents/ssad/jap/frontend/src/index.js",[],"/Users/alapan/Documents/ssad/jap/frontend/src/components/Main.jsx",["30","31"],"/Users/alapan/Documents/ssad/jap/frontend/src/components/Signup.jsx",["32","33","34","35"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport axios from 'axios';\n\nclass Signup extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            formtype: '',\n            firstName:'',\n            lastName:'',\n            email: '',\n            password: '',\n            education:[{institute:'', start:'',end:''}],\n            skill:[''],\n            telnum:'',\n            bio:'',\n            touched : {\n                firstName:false,\n                lastName:false,\n                email: false,\n                password: false,\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleUserChange = this.handleUserChange.bind(this);\n        this.renderEducation = this.renderEducation.bind(this);\n        this.addEducation = this.addEducation.bind(this);\n        this.removeEducation = this.removeEducation.bind(this);\n        this.renderSkill = this.renderSkill.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.removeSkill= this.removeSkill.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n\n        let tok = name.split('-');\n        if(tok[0]==='education'){\n            let ed = this.state.education;\n            let pos = Number(tok[1]);\n            let field = tok[2];\n            ed[pos][field] = value;\n            this.setState({education:ed});\n        }\n        else if(tok[0]==='skill'){\n            let sk = this.state.skill;\n            let pos = Number(tok[1]);\n            sk[pos] = value;\n            this.setState({skill:sk});\n        }\n        else{\n            this.setState({\n            [name]: value\n            });\n        }\n    }\n\n    validate(firstName,lastName,telnum,email) {\n        const errors={\n            firstName:'',\n            lastName:'',\n            telnum: '',\n            email: ''\n        };\n        if(this.state.touched.firstName && (firstName.length<3 || firstName.length>=10)){\n            errors.firstName='First Name should have 3-10 characters';\n        }\n        if(this.state.touched.lastName && (lastName.length<3 || lastName.length>=10)){\n            errors.lastName='Last Name should have 3-10 characters';\n        }\n        const reg = /^\\d+$/;\n        if(this.state.touched.telnum && !reg.test(telnum)){\n            errors.telnum='Telephone Number should have numbers';\n        }\n        return errors;\n    }\n\n    addEducation(){\n        let ed = this.state.education;\n        ed.push({institute:'', start:'',end:''});\n        this.setState({education : ed});\n    }\n\n    removeEducation(idx){\n        let ed = this.state.education;\n        ed.splice(idx,1);\n        this.setState({education : ed});\n    }\n\n    renderEducation(){\n        let ed = this.state.education;\n        let eds = ed.map((val,idx)=>{\n            let edIdx = `education-${idx}`;\n            return(\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={6}>\n                    <Input type=\"text\" name={edIdx+'-institute'}\n                        placeholder=\"Institute Name\"\n                        value={this.state.education[idx].institute}\n                        onChange={this.handleInputChange} />\n                    <Input type=\"number\" name={edIdx+'-start'}\n                        placeholder=\"Start Year\"\n                        value={this.state.education[idx].start}\n                        onChange={this.handleInputChange} />\n\n                    <Input type=\"number\" name={edIdx+'-end'}\n                        placeholder=\"End Year\"\n                        value={this.state.education[idx].end}\n                        onChange={this.handleInputChange} />\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeEducation(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Education</Label>\n                </FormGroup>\n                {eds}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addEducation}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n\n    }\n\n    addSkill(){\n        let sk = this.state.skill;\n        sk.push('');\n        this.setState({skill : sk});\n    }\n\n    removeSkill(idx){\n        let sk = this.state.skill;\n        sk.splice(idx,1);\n        this.setState({skill : sk});\n    }\n\n    renderSkill(){\n        let sk = this.state.skill;\n        let sks = sk.map((val,idx)=>{\n            let skIdx = `skill-${idx}`;\n            return(\n                <FormGroup row>\n                <Label htmlFor=\"type\" md={2}></Label>\n                <Col md={3}>\n                    <Input type=\"select\" name={skIdx} value={this.state.skill[idx]} onChange={this.handleInputChange}>\n                        <option> Select Type</option>\n                        <option>C++</option>\n                        <option>Python</option>\n                    </Input>\n                </Col>\n                <Col md={1}>\n                <Button\n                onClick={(idx)=>{this.removeSkill(idx);}}>\n                    -\n                </Button>\n                </Col>\n                </FormGroup>\n            )\n        });\n        return(\n            <div>\n                <FormGroup row>\n                <Label md={2}>Skills</Label>\n                </FormGroup>\n                {sks}\n                <FormGroup row>\n                <Label md={2}></Label>\n                <Col md={10}>\n                <Button color=\"primary\"\n                onClick={this.addSkill}>\n                    +\n                </Button>\n                </Col>\n                </FormGroup>\n            </div>\n\n        );\n    }\n\n    handleUserChange(){\n        // console.log('Current State is: ' + JSON.stringify(this.state.formtype));\n        if(this.state.formtype===\"user\"){\n            let eds= this.renderEducation();\n            let sks= this.renderSkill();\n            return(\n                <div>\n                {eds}\n                {sks}\n                <FormGroup row>\n                    <Label htmlFor=\"photo\" md={2}>Profile Photo</Label>\n                    <Col md={10}>\n                        <Input type=\"file\"/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label htmlFor=\"resume\" md={2}>Resume</Label>\n                    <Col md={10}>\n                        <Input type=\"file\"/>\n                    </Col>\n                </FormGroup>\n                </div>\n            )\n        }\n        else if(this.state.formtype===\"recruiter\"){\n            return(\n                <div>\n                    <FormGroup row>\n                        <Label htmlFor=\"telnum\" md={2}>Contact Number</Label>\n                        <Col md={10}>\n                            <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Contact Number\" onChange={this.handleInputChange} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\" onChange={this.handleInputChange} ></Input>\n                        </Col>\n                    </FormGroup>\n                </div>\n            );\n        }\n    }\n\n    handleSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n\n        if(this.state.formtype==='user')axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/users/signup\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Welcome! We have you successfully registered.\");\n            console.log(response)\n            window.location.replace(\"http://localhost:3001/login\");\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n                // this.setState({isError: true});\n                // this.setState({errors: error.response.data});\n            }\n        });\n        else if(this.state.formtype==='recruiter')axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/recruiters/signup\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(\"Welcome! We have you successfully registered.\");\n            console.log(response)\n            window.location.replace(\"http://localhost:3001/login\");\n        }).catch(error => {\n            alert(\"Oops, Something went wrong!!\");\n            if (error) {\n                console.log(error.response);\n                // this.setState({isError: true});\n                // this.setState({errors: error.response.data});\n            }\n        });\n        event.preventDefault();\n    }\n\n    handleBlur = (field)=> {\n        this.setState({\n            touched:{...this.state.touched,[field]:true}\n        });\n    }\n\n    render(){\n        const errors=this.validate(this.state.firstName,this.state.lastName,this.state.telnum,this.state.email)\n\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        valid={errors.firstName === ''}\n                                        invalid={errors.firstName !== ''}\n                                        onBlur={()=>{this.handleBlur('firstName')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.firstName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        valid={errors.lastName === ''}\n                                        invalid={errors.lastName !== ''}\n                                        onBlur={()=>{this.handleBlur('lastName')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.lastName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        valid={errors.email === ''}\n                                        invalid={errors.email !== ''}\n                                        onBlur={()=>{this.handleBlur('email')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\n                                <Col md={10}>\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\n                                        placeholder=\"Password\"\n                                        value={this.state.password}\n                                        // valid={errors.password === ''}\n                                        // invalid={errors.password !== ''}\n                                        onBlur={()=>{this.handleBlur('password')}}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback>{errors.password}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                            <Label htmlFor=\"type\" md={2}>Sign up as </Label>\n                                <Col md={3}>\n                                    <Input type=\"select\" name=\"formtype\" value={this.state.formtype} onChange={this.handleInputChange}>\n                                        <option selected> Select Type</option>\n                                        <option>user</option>\n                                        <option>recruiter</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            {this.handleUserChange()}\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Sign Up\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Signup;","/Users/alapan/Documents/ssad/jap/frontend/src/components/Login.jsx",["36","37","38","39","40","41","42","43","44"],"import React , {Component}from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nimport { BrowserRouter as Router, Route, Link , Switch, Redirect} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n\t\tthis.state = {\n\t\t\temail: '',\n            password: '',\n\t\t\tbearerToken:''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleUserSubmit = this.handleUserSubmit.bind(this);\n        this.handleRecruiterSubmit = this.handleRecruiterSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        // console.log(name , value);\n        this.setState({\n        [name]: value\n        });\n    }\n\n    handleUserSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/users/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log( response);\n            // window.location.replace(\"http://localhost:3000/users/login\");\n            this.props.clogin(response.data.token);\n        }).catch(error => {\n            alert(JSON.stringify(error.response));\n            if (error) {\n                console.log(error.response);\n            }\n        });\n    }\n\n    handleRecruiterSubmit(event) {\n        // console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/recruiters/login\",\n            data: this.state,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then((response) => {\n            alert(JSON.stringify(response));\n            console.log(response);\n            // window.location.replace(\"http://localhost:3000/users/login\");\n        }).catch(error => {\n            alert(error.response);\n            if (error) {\n                console.log(error.response);\n                // this.setState({isError: true});\n                // this.setState({errors: error.response.data});\n            }\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\n                                <Col md={10}>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    // valid={errors.password === ''}\n                                    // invalid={errors.password !== ''}\n                                    // onBlur={()=>{this.handleBlur('password')}}\n                                    onChange={this.handleInputChange} />\n                                {/* <FormFeedback>{errors.password}</FormFeedback> */}\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 3, offset: 3}}>\n                                    <Button color=\"primary\" onClick={this.handleUserSubmit}>\n                                        Sign In as Applicant\n                                    </Button>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Button color=\"primary\" onClick={this.handleRecruiterSubmit}>\n                                        Sign In as Recruiter\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Login;",{"ruleId":"45","severity":1,"message":"46","line":1,"column":16,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":2,"column":27,"nodeType":"47","messageId":"48","endLine":2,"endColumn":33},{"ruleId":"45","severity":1,"message":"50","line":2,"column":42,"nodeType":"47","messageId":"48","endLine":2,"endColumn":46},{"ruleId":"45","severity":1,"message":"51","line":2,"column":9,"nodeType":"47","messageId":"48","endLine":2,"endColumn":19},{"ruleId":"45","severity":1,"message":"52","line":2,"column":21,"nodeType":"47","messageId":"48","endLine":2,"endColumn":35},{"ruleId":"45","severity":1,"message":"50","line":3,"column":9,"nodeType":"47","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"45","severity":1,"message":"53","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":16},{"ruleId":"45","severity":1,"message":"51","line":2,"column":9,"nodeType":"47","messageId":"48","endLine":2,"endColumn":19},{"ruleId":"45","severity":1,"message":"52","line":2,"column":21,"nodeType":"47","messageId":"48","endLine":2,"endColumn":35},{"ruleId":"45","severity":1,"message":"54","line":2,"column":81,"nodeType":"47","messageId":"48","endLine":2,"endColumn":93},{"ruleId":"45","severity":1,"message":"53","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":5,"column":27,"nodeType":"47","messageId":"48","endLine":5,"endColumn":33},{"ruleId":"45","severity":1,"message":"55","line":5,"column":35,"nodeType":"47","messageId":"48","endLine":5,"endColumn":40},{"ruleId":"45","severity":1,"message":"50","line":5,"column":42,"nodeType":"47","messageId":"48","endLine":5,"endColumn":46},{"ruleId":"45","severity":1,"message":"56","line":5,"column":49,"nodeType":"47","messageId":"48","endLine":5,"endColumn":55},{"ruleId":"45","severity":1,"message":"57","line":5,"column":57,"nodeType":"47","messageId":"48","endLine":5,"endColumn":65},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'render' is defined but never used.","'FormFeedback' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used."]